"use strict";(self.webpackChunkqaautomater=self.webpackChunkqaautomater||[]).push([[595],{88723:(t,e,a)=>{a.a(t,(async(t,s)=>{try{a.r(e),a.d(e,{default:()=>H});var i=a(66075),l=a(47313),n=a(66782),r=a(25399),o=a(70238),c=a(52527),d=a(33516),h=a(97926),w=a(60200),u=a(92504),m=a(34948),C=a(44660),x=a(9327),T=a(1781),f=a(46597),S=a(40308),g=a(94209),p=a(23455),y=a(82020),v=a(68642),P=a(12181),b=a(99106),D=a(47757),j=a(58390),E=a(16939),Z=a.n(E),A=(a(18137),a(50207)),k=a(4104),F=a(72610),N=a(43701),O=(a(34100),a(44),a(80758)),L=a(94118),B=a(36620),I=(a(94230),a(78944)),U=a(72102),K=a(12944),R=a(98212),V=a(58758),X=a(10123),Y=a(48737),Q=a(46417),M=t([F]);F=(M.then?(await M)():M)[0];class z extends l.Component{constructor(){super(...arguments),this.notificationSystem=l.createRef(),this.state={isPageLoading:!1,isUserSelectedNewTestPlan:b.C.IsUserSelectedNewTestPlan,isErrorOnNewTestPlan:b.C.IsErrorOnNewTestPlan,newTestPlan:b.C.NewTestPlan,listOfTestPlan:b.C.ListOfTestPlan,selectedTestPlan:b.C.SelectedTestPlan,isErrorOnTestPlan:b.C.IsErrorOnTestPlan,listOfTestingType:b.C.ListOfTestingType,selectedTestingType:b.C.SelectedTestingType,listOfScreen:b.C.ListOfScreen,selectedScreen:b.C.SelectedScreen,browser:b.C.Browser,isErrorOnBrowser:b.C.IsErrorOnBrowser,oS:b.C.OS,releaseVersion:b.C.ReleaseVersion,isErrorOnTestCycle:b.C.IsErrorOnTestCycle,listOfTestCycle:b.C.ListOfTestCycle,selectedTestCycle:b.C.SelectedTestCycle,listOfTestCases:b.C.ListOfTestCases,listOfRemarksDataForTestCase:b.C.ListOfRemarksDataForTestCase,listOfPlaceHolder:b.C.ListOfPlaceHolder,selectedPlaceHolder:b.C.SelectedPlaceHolder,selectedTestCase:b.C.SelectedTestCase,executionSummaryData:b.C.ExecutionSummaryData,testPlanCompletedProgress:b.C.TestPlanCompletedProgress,totalLinkedDefect:b.C.TotalLinkedDefect,executedComponentXaxis:b.C.ExecutedComponentXaxis,executedComponentYaxis:b.C.ExecutedComponentYaxis,executedByXaxis:b.C.ExecutedByXaxis,executedByYaxis:b.C.ExecutedByYaxis,executedByColors:b.C.ExecutedByColors,defectStatusXaxis:b.C.DefectStatusXaxis,defectStatusYAxis:b.C.DefectStatusYAxis,defectPriorityXAxis:b.C.DefectPriorityXAxis,defectPriorityYAxis:b.C.DefectPriorityYAxis,environmentList:b.C.EnvironmentList,selectedEnvironment:b.C.SelectedEnvironment,isErrorOnEnvironment:b.C.IsErrorOnEnvironment,existingTestSuiteList:b.C.ExistingTestSuiteList,selectedExistingTestSuite:b.C.SelectedExistingTestSuite,isErrorOnExistingTestSuite:b.C.IsErrorOnExistingTestSuite,listOfTestCycleForNewTestPlan:b.C.ListOfTestCycleForNewTestPlan,selectedTestCycleForNewTestPlan:b.C.SelectedTestCycleForNewTestPlan,isErrorOnTestCycleForNewTestPlan:b.C.IsErrorOnTestCycleForNewTestPlan,newTestPlanCustomField:b.C.NewTestPlanCustomField,exitingTestPlanCustomDetails:b.C.ExitingTestPlanCustomDetails,testExecutionCommentsDataForTable:[],testExecutionAttachmentDataForTable:[],testCaseAttachmentTable:b.C.TestCaseAttachmentTable,updateAttachmentData:b.C.UpdateAttachmentData,modalForCustomFields:!1,customKeyNameToUpdate:b.C.CustomKeyNameToUpdate,listOfCustomValueForKey:b.C.ListOfCustomValueForKey,selectedValueForCustomKey:b.C.SelectedValueForCustomKey,selectedRowIDforUpdateCustomFieldTable:b.C.SelectedRowIDforUpdateCustomFieldTable,modalForDefects:!1,testIdToLinkDefect:"",testComponentToLinkDefect:"",listOfDefectsForComponent:[],selectedDefectId:[],selectedRowNumber:-1,listOfBulkActionValue:[],selectedBulkActionKey:"",isErrorOnBulkActionKey:!1,selectedBulkActionValue:"",isErrorOnBulkActionValue:!1,selectedRowFromAttachmentTable:{},isEditTestPlanButtonDisabled:b.C.IsEditTestPlanButtonDisabled,isEditTestPlanModal:!1,testPlanCustomDetailsForUpdate:b.C.TestPlanCustomDetailsForUpdate,modalForCustomFieldsToUpdate:!1,modalForDeleteTestPlan:!1,selectedTestCycleForCloning:b.C.SelectedTestCycleForCloning,isErrorOnTestCycleForCloning:b.C.IsErrorOnTestCycleForCloning,accordionIdForAttachment:"",accordionIdForComments:"",accordionIdForNewTestPlan:""},this.componentDidMount=async()=>{window.scrollTo(0,0),this.setState({isPageLoading:!0}),await D.Z.loadTestPlanPage(),this.setState({isUserSelectedNewTestPlan:b.C.IsUserSelectedNewTestPlan}),this.setState({isErrorOnNewTestPlan:b.C.IsErrorOnNewTestPlan}),this.setState({newTestPlan:b.C.NewTestPlan}),this.setState({listOfTestPlan:b.C.ListOfTestPlan}),this.setState({selectedTestPlan:b.C.SelectedTestPlan}),this.setState({isErrorOnTestPlan:b.C.IsErrorOnTestPlan}),this.setState({listOfTestingType:b.C.ListOfTestingType}),this.setState({selectedTestingType:b.C.SelectedTestingType}),this.setState({listOfScreen:b.C.ListOfScreen}),this.setState({selectedScreen:b.C.SelectedScreen}),this.setState({browser:b.C.Browser}),this.setState({isErrorOnBrowser:b.C.IsErrorOnBrowser}),this.setState({oS:b.C.OS}),this.setState({releaseVersion:b.C.ReleaseVersion}),this.setState({isErrorOnTestCycle:b.C.IsErrorOnTestCycle}),this.setState({listOfTestCycle:b.C.ListOfTestCycle}),this.setState({selectedTestCycle:b.C.SelectedTestCycle}),this.setState({listOfTestCases:b.C.ListOfTestCases}),this.setState({listOfRemarksDataForTestCase:b.C.ListOfRemarksDataForTestCase}),this.setState({listOfPlaceHolder:b.C.ListOfPlaceHolder}),this.setState({selectedPlaceHolder:b.C.SelectedPlaceHolder}),this.setState({selectedTestCase:b.C.SelectedTestCase}),this.setState({executionSummaryData:b.C.ExecutionSummaryData}),this.setState({testPlanCompletedProgress:b.C.TestPlanCompletedProgress}),this.setState({totalLinkedDefect:b.C.TotalLinkedDefect}),this.setState({executedComponentXaxis:b.C.ExecutedComponentXaxis}),this.setState({executedComponentYaxis:b.C.ExecutedComponentYaxis}),this.setState({executedByXaxis:b.C.ExecutedByXaxis}),this.setState({executedByYaxis:b.C.ExecutedByYaxis}),this.setState({executedByColors:b.C.ExecutedByColors}),this.setState({defectStatusXaxis:b.C.DefectStatusXaxis}),this.setState({defectStatusYAxis:b.C.DefectStatusYAxis}),this.setState({defectPriorityXAxis:b.C.DefectPriorityXAxis}),this.setState({defectPriorityYAxis:b.C.DefectPriorityYAxis}),this.setState({environmentList:b.C.EnvironmentList}),this.setState({selectedEnvironment:b.C.SelectedEnvironment}),this.setState({isErrorOnEnvironment:b.C.IsErrorOnEnvironment}),this.setState({existingTestSuiteList:b.C.ExistingTestSuiteList}),this.setState({selectedExistingTestSuite:b.C.SelectedExistingTestSuite}),this.setState({isErrorOnExistingTestSuite:b.C.IsErrorOnExistingTestSuite}),this.setState({listOfTestCycleForNewTestPlan:b.C.ListOfTestCycleForNewTestPlan}),this.setState({selectedTestCycleForNewTestPlan:b.C.SelectedTestCycleForNewTestPlan}),this.setState({isErrorOnTestCycleForNewTestPlan:b.C.IsErrorOnTestCycleForNewTestPlan}),this.setState({newTestPlanCustomField:b.C.NewTestPlanCustomField}),this.setState({exitingTestPlanCustomDetails:b.C.ExitingTestPlanCustomDetails}),this.setState({updateAttachmentData:b.C.UpdateAttachmentData}),this.fileUpdateInputRef=l.createRef(),this.setState({customKeyNameToUpdate:b.C.CustomKeyNameToUpdate}),this.setState({listOfCustomValueForKey:b.C.ListOfCustomValueForKey}),this.setState({selectedValueForCustomKey:b.C.SelectedValueForCustomKey}),this.setState({selectedRowIDforUpdateCustomFieldTable:b.C.SelectedRowIDforUpdateCustomFieldTable}),this.setState({isEditTestPlanButtonDisabled:b.C.IsEditTestPlanButtonDisabled}),this.setState({testPlanCustomDetailsForUpdate:b.C.TestPlanCustomDetailsForUpdate}),this.setState({selectedTestCycleForCloning:b.C.SelectedTestCycleForCloning}),this.setState({isErrorOnTestCycleForCloning:b.C.IsErrorOnTestCycleForCloning}),this.setState({testCaseAttachmentTable:b.C.TestCaseAttachmentTable}),this.setState({isPageLoading:!1})},this.getNotification=async(t,e)=>{this.notificationSystem.current.addNotification({message:e,level:t,autoDismiss:10})},this.selectTestingType=async t=>{var e=await t.target.value;await this.state.selectedTestingType!==await e&&(b.C.SelectedTestingType=await e,this.setState({selectedTestingType:await e}))},this.selectScreen=async t=>{var e=await t.target.value;await this.state.selectedScreen!==await e&&(b.C.SelectedScreen=await e,this.setState({selectedScreen:await e}))},this.selectBrowser=async t=>{this.setState({isErrorOnBrowser:!1});var e=await t.target.value;await this.state.browser!==await e&&(b.C.Browser=await e,this.setState({browser:await e}))},this.selectOS=async t=>{var e=await t.target.value;await this.state.oS!==await e&&(b.C.OS=await e,this.setState({oS:await e}))},this.selectReleaseVersion=async t=>{var e=await t.target.value;await this.state.releaseVersion!==await e&&(b.C.ReleaseVersion=await e,this.setState({releaseVersion:await e}))},this.selectTestCycle=async t=>{this.setState({isErrorOnTestCycle:!1});var e=await t.target.value;await this.state.selectedTestCycle!==await e&&(b.C.SelectedTestCase=[],this.setState({selectedTestCase:[]}),b.C.IsEditTestPlanButtonDisabled=!0,this.setState({isEditTestPlanButtonDisabled:!0}),this.setState({isPageLoading:!0}),b.C.SelectedTestCycle=await e,this.setState({selectedTestCycle:await e}),b.C.ExitingTestPlanCustomDetails=[],this.setState({exitingTestPlanCustomDetails:[]}),this.setState({listOfTestPlan:[]}),b.C.ListOfTestPlan=[],b.C.ListOfTestCases=[],this.setState({listOfTestCases:[]}),b.C.TestPlanCompletedProgress=0,this.setState({testPlanCompletedProgress:0}),b.C.TotalLinkedDefect=0,this.setState({totalLinkedDefect:0}),b.C.ExecutionSummaryData=[],this.setState({executionSummaryData:[]}),b.C.ExecutedComponentXaxis=[],this.setState({executedComponentXaxis:[]}),b.C.ExecutedComponentYaxis=[],this.setState({executedComponentYaxis:[]}),b.C.ExecutedByXaxis=[],this.setState({executedByXaxis:[]}),b.C.ExecutedByYaxis=[],this.setState({executedByYaxis:[]}),b.C.DefectStatusXaxis=[],this.setState({defectStatusXaxis:[]}),b.C.DefectStatusYAxis=[],this.setState({defectStatusYAxis:[]}),b.C.DefectPriorityXAxis=[],this.setState({defectPriorityXAxis:[]}),b.C.DefectPriorityYAxis=[],this.setState({defectPriorityYAxis:[]}),b.C.ListOfTestPlan=await D.Z.getAllTestPlanFromTestCycle(await e),this.setState({listOfTestPlan:b.C.ListOfTestPlan}),b.C.SelectedTestPlan="",this.setState({selectedTestPlan:""}),this.setState({isPageLoading:!1}))},this.updateTestCaseRemarksData=async(t,e)=>{var a=await t;b.C.ListOfRemarksDataForTestCase[await e]!==await a&&(b.C.ListOfRemarksDataForTestCase[await e]=await a,b.C.UpdatedRemarksData[await e]=await a)},this.addNewTestPlan=async t=>{this.setState({isErrorOnNewTestPlan:!1});var e=await t.target.value;if(await this.state.newTestPlan!==await e){b.C.NewTestPlan=await e,this.setState({newTestPlan:await e});var a=await X.Z.isValidStringforFile(await e);await a||(b.C.IsErrorOnNewTestPlan=!0,this.setState({isErrorOnNewTestPlan:!0}))}},this.selectTestPlan=async t=>{this.setState({isErrorOnTestPlan:!1});var e=await t.target.value;if(await this.state.selectedTestPlan!==await e){if(""===await e?(b.C.IsEditTestPlanButtonDisabled=!0,this.setState({isEditTestPlanButtonDisabled:!0})):(b.C.isEditTestPlanButtonDisabled=!1,this.setState({isEditTestPlanButtonDisabled:!1})),b.C.SelectedTestCase=[],this.setState({selectedTestCase:[]}),b.C.SelectedTestPlan=await e,this.setState({selectedTestPlan:await e}),this.setState({isPageLoading:!0}),b.C.ExitingTestPlanCustomDetails=[],this.setState({exitingTestPlanCustomDetails:[]}),b.C.ListOfTestCases=[],this.setState({listOfTestCases:[]}),b.C.TestPlanCompletedProgress=0,this.setState({testPlanCompletedProgress:0}),b.C.TotalLinkedDefect=0,this.setState({totalLinkedDefect:0}),b.C.ExecutionSummaryData=[],this.setState({executionSummaryData:[]}),b.C.ExecutedComponentXaxis=[],this.setState({executedComponentXaxis:[]}),b.C.ExecutedComponentYaxis=[],this.setState({executedComponentYaxis:[]}),b.C.ExecutedByXaxis=[],this.setState({executedByXaxis:[]}),b.C.ExecutedByYaxis=[],this.setState({executedByYaxis:[]}),b.C.DefectStatusXaxis=[],this.setState({defectStatusXaxis:[]}),b.C.DefectStatusYAxis=[],this.setState({defectStatusYAxis:[]}),b.C.DefectPriorityXAxis=[],this.setState({defectPriorityXAxis:[]}),b.C.DefectPriorityYAxis=[],this.setState({defectPriorityYAxis:[]}),""!==await e){var a=await D.Z.getTestPlanDetail(b.C.SelectedTestCycle,await e);b.C.AllTestPlanDetails=await a;var s=await a.customFields;b.C.ExitingTestPlanCustomDetails=await s,this.setState({exitingTestPlanCustomDetails:await s}),b.C.TestPlanCustomDetailsForUpdate=await s,this.setState({testPlanCustomDetailsForUpdate:await s});var i=await a.AllTestCases;if(void 0===await i){var l=await a.testSuiteName,n=await D.Z.getTestCaseFromTestSuite(await l);if(void 0===await n||0===await n.length)i=[];else{for(let t=0;t<await n.length;t++)n[t].linkeddefect="",n[t].status="Pending",n[t].assignto="",n[t].executedBy="";i=await n}}var r=await a.TestCaseExecutionDetails;if(void 0!==await r){var o=await Object.keys(await r);if(await o.length>0){var c={};for(let t=0;t<await o.length;t++){var d=await o[t];void 0===await c[await d]&&(c[await d]=[]),c[await d]=await r[await d].attachments}this.setState({testCaseAttachmentTable:await c})}}b.C.ListOfTestCases=await i,this.setState({listOfTestCases:await i}),await D.Z.getListOfUser(),await D.Z.generateGraphData(),this.setState({executionSummaryData:b.C.ExecutionSummaryData}),this.setState({testPlanCompletedProgress:b.C.TestPlanCompletedProgress}),this.setState({totalLinkedDefect:b.C.TotalLinkedDefect}),this.setState({executedComponentXaxis:b.C.ExecutedComponentXaxis}),this.setState({executedComponentYaxis:b.C.ExecutedComponentYaxis}),this.setState({executedByXaxis:b.C.ExecutedByXaxis}),this.setState({executedByYaxis:b.C.ExecutedByYaxis}),this.setState({defectStatusXaxis:b.C.DefectStatusXaxis}),this.setState({defectStatusYAxis:b.C.DefectStatusYAxis}),this.setState({defectPriorityXAxis:b.C.DefectPriorityXAxis}),this.setState({defectPriorityYAxis:b.C.DefectPriorityYAxis})}this.setState({isPageLoading:!1})}},this.selectPlaceHolder=async t=>{var e=await t.target.value;await this.state.selectedPlaceHolder!==await e&&(b.C.SelectedPlaceHolder=await e,this.setState({selectedPlaceHolder:await e}))},this.handleOnSelect=async(t,e)=>{if(await e)await b.C.SelectedTestCase.includes(await t.id)||b.C.SelectedTestCase.push(await t.id);else{const e=b.C.SelectedTestCase.filter((e=>e!==t.id));b.C.SelectedTestCase=await e}this.setState({selectedTestCase:await b.C.SelectedTestCase})},this.handleOnSelectAll=async(t,e)=>{const a=await e.map((t=>t.id));if(t){var s=b.C.SelectedTestCase;let t=await s.concat(await a.filter((t=>!s.includes(t))));b.C.SelectedTestCase=await t,this.setState((()=>({selectedTestCase:t})))}else{s=b.C.SelectedTestCase;let t=await s.filter((t=>!a.includes(t)));b.C.SelectedTestCase=await t,this.setState((()=>({selectedTestCase:t})))}},this.updateTestExecutionDetailsForTestPlan=async t=>{await t.preventDefault();var e=await this.state.selectedTestCycle,a=await this.state.selectedTestPlan,s="";if(""===await e&&(this.setState({isErrorOnTestCycle:!0}),s="Test Cycle."),""===await a&&(this.setState({isErrorOnTestPlan:!0}),s="Test Plan."),""!==await s)return await this.getNotification("error","Following selection are required "+await s);var i=await b.C.UpdatedTestRowData;if(0===await i.length)return await this.getNotification("error","There is no test case details found under TEST CASES FOR EXECUTION table.");var l=b.C.TestExecutionTestStepsStatus,n=b.C.TestExecutionCommentsToSave,r=b.C.TestExecutionTestCaseAttachmentDataToSave,o=b.C.TestExecutionFileUploadData,c=b.C.TestExecutionTestCaseAttachmentDataToUpdate;this.setState({isPageLoading:!0});var d=await D.Z.updateTestPlan(await a,await e,await i,await l,await n,await r,await o,await c);this.setState({isPageLoading:!1}),await d?(b.C.TestPlanCompletedProgress=0,this.setState({testPlanCompletedProgress:0}),b.C.TotalLinkedDefect=0,this.setState({totalLinkedDefect:0}),b.C.ExecutionSummaryData=[],this.setState({executionSummaryData:[]}),b.C.ExecutedComponentXaxis=[],this.setState({executedComponentXaxis:[]}),b.C.ExecutedComponentYaxis=[],this.setState({executedComponentYaxis:[]}),b.C.ExecutedByXaxis=[],this.setState({executedByXaxis:[]}),b.C.ExecutedByYaxis=[],this.setState({executedByYaxis:[]}),b.C.DefectStatusXaxis=[],this.setState({defectStatusXaxis:[]}),b.C.DefectStatusYAxis=[],this.setState({defectStatusYAxis:[]}),b.C.DefectPriorityXAxis=[],this.setState({defectPriorityXAxis:[]}),b.C.DefectPriorityYAxis=[],this.setState({defectPriorityYAxis:[]}),await D.Z.generateGraphData(),this.setState({executionSummaryData:b.C.ExecutionSummaryData}),this.setState({testPlanCompletedProgress:b.C.TestPlanCompletedProgress}),this.setState({totalLinkedDefect:b.C.TotalLinkedDefect}),this.setState({executedComponentXaxis:b.C.ExecutedComponentXaxis}),this.setState({executedComponentYaxis:b.C.ExecutedComponentYaxis}),this.setState({executedByXaxis:b.C.ExecutedByXaxis}),this.setState({executedByYaxis:b.C.ExecutedByYaxis}),this.setState({defectStatusXaxis:b.C.DefectStatusXaxis}),this.setState({defectStatusYAxis:b.C.DefectStatusYAxis}),this.setState({defectPriorityXAxis:b.C.DefectPriorityXAxis}),this.setState({defectPriorityYAxis:b.C.DefectPriorityYAxis}),await this.getNotification("success","Test execution information "+a+" is successfully saved.")):await this.getNotification("error","Unable to save test execution information because of "+await j.D.ErrorMessage)},this.addEnvironment=async t=>{this.setState({isErrorOnEnvironment:!1});var e=await t.target.value;await this.state.selectedEnvironment!==await e&&(b.C.SelectedEnvironment=await e,this.setState({selectedEnvironment:await e}))},this.addExistingTestSuite=async t=>{this.setState({isErrorOnExistingTestSuite:!1});var e=await t.target.value;await this.state.selectedExistingTestSuite!==await e&&(b.C.SelectedExistingTestSuite=await e,this.setState({selectedExistingTestSuite:await e}))},this.createNewTestPlan=async t=>{await t.preventDefault();var e=await this.state.newTestPlan,a=await this.state.selectedTestCycleForNewTestPlan,s=await this.state.selectedEnvironment,i=await this.state.selectedExistingTestSuite,l="";if(""===await e.toString().trim()&&(this.setState({isErrorOnNewTestPlan:!0}),l="New Test Plan."),""===await a.toString().trim()&&(this.setState({isErrorOnTestCycleForNewTestPlan:!0}),l+="Test Cycle."),""===await s.toString().trim()&&(this.setState({isErrorOnEnvironment:!0}),l+="Environment."),""===await i.toString().trim()&&(this.setState({isErrorOnExistingTestSuite:!0}),l+="TestSuite."),""!==await l)return await this.getNotification("error","Following field is/are required for saving test plan details "+await l);if(this.state.isErrorOnNewTestPlan)return await this.getNotification("error","Please provide the correct name of test plan , accepable value are A-Za-z0-9 _-");this.setState({isPageLoading:!0});var n=await D.Z.saveTestPlan(await e,await a,await s,await i);this.setState({isPageLoading:!1}),await n?(b.C.NewTestPlanCustomField=[],this.setState({newTestPlanCustomField:[]}),await this.getNotification("success","Test plan "+e+" is successfully created."),await new Promise((t=>setTimeout(t,2e3))),await window.location.reload()):await this.getNotification("error","Unable to create new test plan because of "+await j.D.ErrorMessage)},this.selectTestCycleForNewTestPlan=async t=>{this.setState({isErrorOnTestCycleForNewTestPlan:!1});var e=await t.target.value;await this.state.selectedTestCycleForNewTestPlan!==await e&&(b.C.SelectedTestCycleForNewTestPlan=await e,this.setState({selectedTestCycleForNewTestPlan:await e}))},this.addNewComments=async t=>{this.setState({testExecutionCommentsDataForTable:[]});var e=await t;if(e.length>0&&""===e[e.length-1].comments.toString().trim())return await this.getNotification("error","Comments can not be blank.");var a={id:e.length+1,comments:"",by:j.Q.userEmail};await e.push(await a),this.setState({testExecutionCommentsDataForTable:await e})},this.handleOpenUpdateFileDialog=async t=>{this.fileUpdateInputRef.current.click()},this.uploadUpdateAttachment=async(t,e,a)=>{var s=await this.state.testCaseAttachmentTable;void 0===await s[await e]&&(s[await e]=[]),await a.preventDefault();const i=await a.target.files[0];if(await i){var l=["webm","png","jpeg","jpg","docs","doc","docx","xlsx","xls","csv","ppt","pptx","txt","mp4","mov","pdf"];const a=await i.name,d=await i.name.split(".").pop().toLowerCase(),h=await i.size,w=await h/1024,u=await w/1024;if(!await l.includes(await d))return await this.getNotification("error","File extension should be "+await l.toString());if(await u>5)return await this.getNotification("error","File size should not be greater than 5 MB");this.fileUpdateInputRef.current.value="";var n=await t;if(await n.length>0)for(let t=0;t<await n.length;t++){var r=await n[t].file;if(await r.toLowerCase()===await a.toLowerCase())return await this.getNotification("error","Duplicate file name found.")}var o=await n.length+1,c={id:await o,file:await a,by:j.Q.userEmail};t.push(c),s[await e]=await t,this.setState({testCaseAttachmentTable:await s}),void 0===b.C.TestExecutionTestCaseAttachmentDataToSave[await e]&&(b.C.TestExecutionTestCaseAttachmentDataToSave[await e]={}),void 0===b.C.TestExecutionTestCaseAttachmentDataToSave[await e][await o]&&(b.C.TestExecutionTestCaseAttachmentDataToSave[await e][await o]={}),b.C.TestExecutionTestCaseAttachmentDataToSave[await e][await o].id=await o,b.C.TestExecutionTestCaseAttachmentDataToSave[await e][await o].file=await a,b.C.TestExecutionTestCaseAttachmentDataToSave[await e][await o].by=await j.Q.userEmail,void 0===await b.C.TestExecutionFileUploadData[await e]&&(b.C.TestExecutionFileUploadData[await e]=[]),b.C.TestExecutionFileUploadData[await e].push(await i)}},this.deleteRowFromAttachmentTable=async(t,e,a)=>{if(await a.preventDefault(),void 0===await t||0===await t.length)return await this.getNotification("error","Please select the attachment before delete.There is no attachment under 'Attachments' section.");var s=await this.state.selectedRowFromAttachmentTable[await e];if(void 0===await s||-1===s)return await this.getNotification("error","Please select the attachment before delete.There is no attachment under 'Attachments' section.");var i=await t[Number(await s)-1].by,l=await j.Q.userEmail;if(!j.Q.isSuperAdmin&&await i!==await l)return await this.getNotification("error","You can not delete file which is uploaded by other user.");if(!(Number(s)>0&&Number(s)<=t.length))return await this.getNotification("error","No file is selected in 'Attachment' section");void 0===b.C.TestExecutionAttachmentNameForDelete[await e]&&(b.C.TestExecutionAttachmentNameForDelete[await e]=[]);var n=await t[Number(await s)-1].file;await b.C.TestExecutionAttachmentNameForDelete[await e].includes(await n)||b.C.TestExecutionAttachmentNameForDelete[await e].push(await n);var r=await V.Z.updateRowIdAfterDelete(await t,await s);void 0===b.C.TestExecutionTestCaseAttachmentDataToUpdate[await e]&&(b.C.TestExecutionTestCaseAttachmentDataToUpdate[await e]={}),b.C.TestExecutionTestCaseAttachmentDataToUpdate[await e]=await r;var o=this.state.testCaseAttachmentTable;o[await e]=await r,this.setState({testCaseAttachmentTable:[]},(()=>{this.setState({testCaseAttachmentTable:o})}))},this.toggleCustomField=async()=>{this.setState({modalForCustomFields:!1})},this.toggleCustomFieldToUpdate=async()=>{this.setState({modalForCustomFieldsToUpdate:!1})},this.toggleForDefectModal=async()=>{this.setState({modalForDefects:!1})},this.toggleForBulkActionModal=async()=>{this.setState({isBulkActionModal:!1})},this.toggleEditTestPlamModal=async()=>{this.setState({isEditTestPlanModal:!1})},this.toggleDeleteTestPlan=async()=>{this.setState({modalForDeleteTestPlan:!1})},this.selectCustomKeyValue=async t=>{var e=await t.target.value;if(await e!==await this.state.selectedValueForCustomKey){b.C.SelectedValueForCustomKey=await e,this.setState({selectedValueForCustomKey:await e});var a=Number(this.state.selectedRowIDforUpdateCustomFieldTable)-1,s=this.state.newTestPlanCustomField;s[await a].value=await e,b.C.NewTestPlanCustomField=await s,this.setState({newTestPlanCustomField:[]},(()=>{this.setState({newTestPlanCustomField:s})}))}b.C.SelectedRowIDforUpdateCustomFieldTable=-1,this.setState({selectedRowIDforUpdateCustomFieldTable:-1}),b.C.ListOfCustomValueForKey=[],this.setState({listOfCustomValueForKey:[]}),b.C.SelectedValueForCustomKey="",this.setState({selectedValueForCustomKey:""}),this.setState({modalForCustomFields:!1})},this.selectDefectToLink=async t=>{this.setState({selectedDefectId:await t})},this.linkDefectToTestCaseExecutionTable=async t=>{await t.preventDefault();var e=await this.state.selectedDefectId;if(0===await e.length)return await this.getNotification("error","Please select defect id for linking.");var a="";for(let r=0;r<await e.length;r++)a=a+","+await e[r].value;a=await a.substring(1);var s=this.state.selectedRowNumber,i=await this.state.listOfTestCases,l=await Number(await s)-1;i[await l].linkeddefect=await a,this.setState({listOfTestCases:[]},(()=>{this.setState({listOfTestCases:i})}));var n=await this.state.testIdToLinkDefect;void 0===b.C.UpdatedTestRowData[n]&&(b.C.UpdatedTestRowData[n]={}),b.C.UpdatedTestRowData[n].linkeddefect=await a,this.setState({modalForDefects:!1})},this.UnlinkDefectToTestCaseExecutionTable=async t=>{await t.preventDefault();var e=this.state.selectedRowNumber,a=await this.state.listOfTestCases,s=await Number(await e)-1;a[await s].linkeddefect="",this.setState({listOfTestCases:[]},(()=>{this.setState({listOfTestCases:a})}));var i=await this.state.testIdToLinkDefect;void 0===b.C.UpdatedTestRowData[i]&&(b.C.UpdatedTestRowData[i]={}),b.C.UpdatedTestRowData[i].linkeddefect="",this.setState({modalForDefects:!1})},this.bulkActionInitiate=async t=>{await t.preventDefault();var e=await this.state.selectedTestCase;if(0===await e.length)return await this.getNotification("error","No Test cases are selected for bulk action.");this.setState({isBulkActionModal:!0}),this.setState({selectedBulkActionKey:""}),this.setState({selectedBulkActionValue:""}),this.setState({listOfBulkActionValue:[]}),this.setState({isErrorOnBulkActionKey:!1}),this.setState({isErrorOnBulkActionValue:!1})},this.selectBulkActionKey=async t=>{this.setState({isErrorOnBulkActionKey:!1});var e=await t.target.value;if(await this.state.selectedBulkActionKey!==await e){if(this.setState({isErrorOnBulkActionValue:!1}),this.setState({selectedBulkActionValue:""}),this.setState({listOfBulkActionValue:[]}),this.setState({selectedBulkActionKey:await e}),""===await e)return;var a=[];switch(await e){case"Assigned to":var s=await b.C.ListOfUsers;for(let t=0;t<await s.length;t++)a.push(await s[t].value);break;case"Status":a=["Pass","Fail","Pending","NA","Blocked"];break;default:a=[]}this.setState({listOfBulkActionValue:await a})}},this.selectBulkActionValue=async t=>{this.setState({isErrorOnBulkActionValue:!1});var e=await t.target.value;await this.state.selectedBulkActionValue!==await e&&this.setState({selectedBulkActionValue:await e})},this.performBulkAction=async t=>{var e=await this.state.selectedBulkActionKey,a=await this.state.selectedBulkActionValue;if(""===await e)return this.setState({isErrorOnBulkActionKey:!0});if(""===await a)return this.setState({isErrorOnBulkActionValue:!0});var s=await this.state.selectedTestCase;if(0===await s.length)return await this.getNotification("error","Please select the test case for bulk execution.");var i=await this.state.listOfTestCases;for(let r=0;r<await s.length;r++){var l=await Number(await s[r])-1,n=await i[await l].testid;void 0===b.C.UpdatedTestRowData[await n]&&(b.C.UpdatedTestRowData[await n]={}),"Assigned to"===await e&&(b.C.UpdatedTestRowData[await n].assignto=await a,i[await l].assignto=await a),"Status"===await e&&(b.C.UpdatedTestRowData[await n].status=await a,b.C.UpdatedTestRowData[await n].executedBy=j.Q.userEmail,i[await l].status=await a,i[await l].executedBy=await j.Q.userEmail)}this.setState({listOfTestCases:[]},(()=>{this.setState({listOfTestCases:i})})),this.setState({selectedTestCase:[]}),b.C.SelectedTestCase=[],this.setState({isBulkActionModal:!1})},this.downloadFileFromServer=async(t,e,a)=>{var s=await t;if(0===await s.length)return await this.getNotification("error","Please select the attachment before download.There is no attachment under 'Attachments' section.");var i=this.state.selectedRowFromAttachmentTable[await e];if(Number(await i)>0&&Number(await i)<=s.length){var l=await Number(await i)-1,n=await s[await l].file;n=await e+"_"+await n;var r=await b.C.SelectedTestCycle,o=await b.C.SelectedTestPlan,c=await D.Z.downloadFromServer("TestPlan/"+await r+"/"+await o,await n);return await c?(await new Promise((t=>setTimeout(t,3e3))),await this.getNotification("success","File is successfully downloded from the server.")):await this.getNotification("error","Unable to download file from the server."+j.D.ErrorMessage)}return await this.getNotification("error","Please select the attachment before download.")},this.editTestPlanButton=async t=>{await t.preventDefault(),this.setState({isErrorOnTestCycleForCloning:!1}),this.setState({selectedTestCycleForCloning:""}),this.setState({isEditTestPlanModal:!0})},this.selectCustomKeyValueToUpdate=async t=>{var e=await t.target.value;if(await e!==await this.state.selectedValueForCustomKey){b.C.SelectedValueForCustomKey=await e,this.setState({selectedValueForCustomKey:await e});var a=Number(this.state.selectedRowIDforUpdateCustomFieldTable)-1,s=this.state.testPlanCustomDetailsForUpdate;s[await a].value=await e,b.C.NewTestPlanCustomField=await s,this.setState({testPlanCustomDetailsForUpdate:[]},(()=>{this.setState({testPlanCustomDetailsForUpdate:s})}))}b.C.SelectedRowIDforUpdateCustomFieldTable=-1,this.setState({selectedRowIDforUpdateCustomFieldTable:-1}),b.C.ListOfCustomValueForKey=[],this.setState({listOfCustomValueForKey:[]}),b.C.SelectedValueForCustomKey="",this.setState({selectedValueForCustomKey:""}),this.setState({modalForCustomFieldsToUpdate:!1})},this.updateTestPlanAttribute=async t=>{var e=this.state.testPlanCustomDetailsForUpdate,a=await b.C.SelectedTestCycle,s=await b.C.SelectedTestPlan,i=await D.Z.updateTestPlanAttribue(await a,await s,await e);return await i?(this.setState({isEditTestPlanModal:!1}),await this.getNotification("success","Test Plan attributes are successfully saved.")):await this.getNotification("error","Unable to save test plan attribute becuase of "+j.D.ErrorMessage)},this.deleteTestPlan=async t=>{this.setState({modalForDeleteTestPlan:!1});var e=await b.C.SelectedTestCycle,a=await b.C.SelectedTestPlan,s=await D.Z.deleteTestPlan(await e,await a);if(!await s)return await this.getNotification("error","Unable to delete test plan becuase of "+j.D.ErrorMessage);this.setState({isEditTestPlanModal:!1}),await this.getNotification("success","Test Plan is successfully deleted."),await new Promise((t=>setTimeout(t,2e3))),await window.location.reload()},this.OpenmodalForDeleteTestPlan=async t=>{this.setState({modalForDeleteTestPlan:!0})},this.selectTestCycleForCloning=async t=>{var e=await t.target.value;this.setState({isErrorOnTestCycleForCloning:!1}),await e!==await this.state.selectedTestCycleForCloning&&(b.C.SelectedTestCycleForCloning=await e,this.setState({selectedTestCycleForCloning:await e}))},this.cloneTestPlan=async()=>{var t=this.state.selectedTestCycleForCloning,e=await b.C.SelectedTestCycle,a=await b.C.SelectedTestPlan;if(""===await t)return this.setState({isErrorOnTestCycleForCloning:!0}),await this.getNotification("error","Please select the test cycle where you want to clone test plan.");if(await e===t)return this.setState({isErrorOnTestCycleForCloning:!0}),await this.getNotification("error","Please select different test cycle, Test plan is already exist in test cycle "+await e);this.setState({isPageLoading:!0});var s=await D.Z.cloneTestPlan(await e,await a,await t);if(this.setState({isPageLoading:!1}),!await s)return await this.getNotification("error","Unable to clone test plan becuase of "+j.D.ErrorMessage);this.setState({isEditTestPlanModal:!1}),await this.getNotification("success","Test Plan is successfully cloned.")},this.toggleAttachmentAccordian=async()=>{""===await this.state.accordionIdForAttachment?this.setState({accordionIdForAttachment:"1"}):this.setState({accordionIdForAttachment:""})},this.toggleCommentsAccordian=async()=>{""===await this.state.accordionIdForComments?this.setState({accordionIdForComments:"1"}):this.setState({accordionIdForComments:""})},this.toggleNewTestPlanAccordian=async()=>{""===await this.state.accordionIdForNewTestPlan?this.setState({accordionIdForNewTestPlan:"1"}):this.setState({accordionIdForNewTestPlan:""})},this.exportTestResults=async t=>{var e=this.state.listOfTestCases;if(0===await e.length)return await this.getNotification("error","No Test case found under Test Case for Execution section");this.setState({isPageLoading:!0});try{var a=[];await a.push(await(["S.no.","Test Id","Component","Test Case Name","Assigned To","Status","Linked Defect"]));for(let i=0;i<await e.length;i++){var s=[];s.push(await await e[i].id),s.push(await await e[i].testid),s.push(await await e[i].component),s.push(await await e[i].testname),s.push(await await e[i].assignto),s.push(await await e[i].status),s.push(await await e[i].linkeddefect),a.push(await s)}var i=await this.state.selectedTestPlan;const t=await a,l=Y.P6.aoa_to_sheet(t),n=Y.P6.book_new();Y.P6.book_append_sheet(n,l,await i),Y.NC(n,"Test Plan "+await i+" Results.xlsx"),await new Promise((t=>setTimeout(t,2e3))),this.setState({isPageLoading:!1}),await this.getNotification("success","Test Plan results are successfully exported.")}catch(l){return this.setState({isPageLoading:!1}),await this.getNotification("error","There is an error on exporting the test plan results "+await l)}}}showTestResults(t){var e=t.testid,a="",s="",i=[],l=[];try{var f=b.C.AllTestPlanDetails.TestCaseExecutionDetails[e];a=f.testPrecondition,s=f.testcaseData,i=f.testExecutionStatusOnStepLavel,l=f.comments}catch(S){l=[]}return(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{style:{borderColor:"default"},children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Test Case Details for ",t.testid]})}),(0,Q.jsxs)(d.Z,{children:[(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)("small",{children:[" Test case precondition : ",a," "]})}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)("small",{children:[" Test case data : ",s," "]})}),(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:i,columns:F.J,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,cellEdit:(0,O.ZP)({mode:"click",blurToSave:!0,afterSaveCell:(t,a,s,i)=>{void 0===b.C.TestExecutionTestStepsStatus[e]&&(b.C.TestExecutionTestStepsStatus[e]={}),b.C.TestExecutionTestStepsStatus[e][s.id]=s.status}})})}),(0,Q.jsx)(h.Z,{open:this.state.accordionIdForAttachment,toggle:this.toggleAttachmentAccordian.bind(this),children:(0,Q.jsxs)(w.Z,{children:[(0,Q.jsx)(u.Z,{targetId:"1",children:"Attachments"}),(0,Q.jsx)(m.Z,{accordionId:"1",children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Attachments",(0,Q.jsxs)(C.Z,{size:"sm",children:[(0,Q.jsx)(x.Z,{color:"black",onClick:this.handleOpenUpdateFileDialog.bind(this),children:(0,Q.jsx)("small",{children:"Add"})}),(0,Q.jsx)(x.Z,{color:"info",onClick:t=>this.downloadFileFromServer(this.state.testCaseAttachmentTable[e],e,t),children:(0,Q.jsx)("small",{children:"Download"})}),(0,Q.jsx)(x.Z,{color:"black",onClick:t=>this.deleteRowFromAttachmentTable(this.state.testCaseAttachmentTable[e],e,t),children:(0,Q.jsx)("small",{children:"Delete"})})]}),(0,Q.jsx)(T.Z,{type:"file",name:"fileUpload",innerRef:this.fileUpdateInputRef,onChange:t=>this.uploadUpdateAttachment(this.state.testCaseAttachmentTable[e],e,t),style:{display:"none"}})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:(()=>{try{var t=this.state.testCaseAttachmentTable[e];return void 0===t?this.state.testCaseAttachmentTable:t}catch(S){return void 0===t?[]:t}})(),columns:F.AB,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,selectRow:{mode:"radio",onSelect:(t,a,s,i)=>{var l=this.state.selectedRowFromAttachmentTable;void 0===l[e]&&(l[e]=-1),l[e]=t.id,this.setState({selectedRowFromAttachmentTable:l})}}})})})})]})})})]})}),(0,Q.jsx)(h.Z,{open:this.state.accordionIdForComments,toggle:this.toggleCommentsAccordian.bind(this),children:(0,Q.jsxs)(w.Z,{children:[(0,Q.jsx)(u.Z,{targetId:"1",children:"Comments"}),(0,Q.jsx)(m.Z,{accordionId:"1",children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Comments",(0,Q.jsx)(C.Z,{size:"sm",children:(0,Q.jsx)(x.Z,{color:"black",onClick:t=>this.addNewComments(l,t),children:(0,Q.jsx)("small",{children:"Add"})})})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:l,columns:F._z,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,cellEdit:(0,O.ZP)({mode:"click",blurToSave:!0,afterSaveCell:(t,a,s,i)=>{var l=j.Q.userEmail;l===s.by||j.Q.isSuperAdmin?(void 0===b.C.TestExecutionCommentsToSave[e]&&(b.C.TestExecutionCommentsToSave[e]={},b.C.TestExecutionCommentsToSave[e][s.id]={}),b.C.TestExecutionCommentsToSave[e][s.id].id=s.id,b.C.TestExecutionCommentsToSave[e][s.id].comments=a,b.C.TestExecutionCommentsToSave[e][s.id].by=l):s.comments=t},onStartEdit:(t,e,a,s)=>{var i=j.Q.userEmail,l=t.by;j.Q.isSuperAdmin||i!==l&&this.getNotification("error","You can not update comments for other user")}})})})})})]})})})]})})]})]})})})}async ExportReportsInPdf(){}render(){const t={showExpandColumn:!0,expandByColumnOnly:!0,renderer:this.showTestResults.bind(this),width:"120px"},e={mode:"checkbox",selected:this.state.selectedTestCase,onSelect:this.handleOnSelect,onSelectAll:this.handleOnSelectAll};return(0,Q.jsxs)(i.Z,{className:"testplan",title:"Test Execution",children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"200%",color:"black"}),(0,Q.jsx)(Z(),{ref:this.notificationSystem}),(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsx)(h.Z,{open:this.state.accordionIdForNewTestPlan,toggle:this.toggleNewTestPlanAccordian.bind(this),children:(0,Q.jsxs)(w.Z,{children:[(0,Q.jsx)(u.Z,{targetId:"1",children:"Create New Test Plan"}),(0,Q.jsx)(m.Z,{accordionId:"1",children:(0,Q.jsxs)(n.Z,{children:[(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["New Test Plan",(0,Q.jsx)(C.Z,{size:"sm",children:(0,Q.jsx)(x.Z,{color:"black",onClick:this.createNewTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Save Test Plan"})})})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsxs)(f.Z,{children:[(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"New Test Plan*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"input",invalid:this.state.isErrorOnNewTestPlan,name:"newtestPlan",defaultValue:this.state.newTestPlan,onChange:this.addNewTestPlan.bind(this),maxLength:100})})]}),(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"Test Cycle*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"select",invalid:this.state.isErrorOnTestCycleForNewTestPlan,onChange:this.selectTestCycleForNewTestPlan.bind(this),name:"testCycle",value:this.state.selectedTestCycleForNewTestPlan,children:(0,Q.jsx)(I.Z,{options:this.state.listOfTestCycleForNewTestPlan})})})]}),(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"Environment*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"select",invalid:this.state.isErrorOnEnvironment,name:"envList",value:this.state.selectedEnvironment,onChange:this.addEnvironment.bind(this),children:(0,Q.jsx)(I.Z,{options:this.state.environmentList})})})]}),(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"Test Suite*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)(T.Z,{type:"select",invalid:this.state.isErrorOnExistingTestSuite,name:"testSuite",value:this.state.selectedExistingTestSuite,onChange:this.addExistingTestSuite.bind(this),children:[(0,Q.jsx)("option",{}),(0,Q.jsx)(I.Z,{options:this.state.existingTestSuiteList})]})})]})]})})]})}),(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:"Test Plan Custom Fields"}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:this.state.newTestPlanCustomField,columns:F.K7,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,cellEdit:(0,O.ZP)({mode:"click",blurToSave:!0,afterSaveCell:(t,e,a,s)=>{},onStartEdit:(t,e,a,s)=>{var i=t.key,l=t.value;if(b.C.CustomKeyListForListBoxOption.includes(i)){b.C.SelectedRowIDforUpdateCustomFieldTable=t.id,this.setState({selectedRowIDforUpdateCustomFieldTable:t.id}),b.C.CustomKeyNameToUpdate=i,this.setState({customKeyNameToUpdate:i});var n=b.C.CustomKeyListBoxWithKeyAnaValue[i];b.C.ListOfCustomValueForKey=n,this.setState({listOfCustomValueForKey:n}),b.C.SelectedValueForCustomKey=l,this.setState({selectedValueForCustomKey:l}),this.setState({modalForCustomFields:!0})}}})})})})]})})]})})]})})})}),(0,Q.jsxs)(n.Z,{children:[(0,Q.jsx)(r.Z,{lg:6,md:6,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsx)("div",{className:"d-flex justify-content-between align-items-center",children:"Select Test Plan for Execution"})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsxs)(f.Z,{children:[(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"Test Cycle*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"select",invalid:this.state.isErrorOnTestCycle,onChange:this.selectTestCycle.bind(this),name:"testCycle",value:this.state.selectedTestCycle,children:(0,Q.jsx)(I.Z,{options:this.state.listOfTestCycle})})})]}),(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:3,children:"Test Plan*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)(T.Z,{type:"select",invalid:this.state.isErrorOnTestPlan,name:"testPlan",value:this.state.selectedTestPlan,onChange:this.selectTestPlan.bind(this),children:[(0,Q.jsx)("option",{}),(0,Q.jsx)(I.Z,{options:this.state.listOfTestPlan})]})})]})]})})]})}),(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Test Plan details",(0,Q.jsx)(C.Z,{size:"sm",children:(0,Q.jsx)(x.Z,{color:"black",name:"editTestPlan",disabled:this.state.isEditTestPlanButtonDisabled,onClick:this.editTestPlanButton.bind(this),children:(0,Q.jsx)("small",{children:"Edit Test Plan"})})})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:this.state.exitingTestPlanCustomDetails,columns:F.K7,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0})})})]})})]}),(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Test Cases for Execution",(0,Q.jsxs)(C.Z,{size:"sm",children:[(0,Q.jsx)(x.Z,{color:"black",name:"updateTestPlan",onClick:this.bulkActionInitiate.bind(this),children:(0,Q.jsx)("small",{children:"Bulk Action"})}),(0,Q.jsx)(x.Z,{color:"info",name:"updateTestPlan",onClick:this.updateTestExecutionDetailsForTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Update Test Execution Details"})}),(0,Q.jsx)(x.Z,{color:"black",onClick:this.exportTestResults.bind(this),children:(0,Q.jsx)("small",{children:"Export Test Results"})})]})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:this.state.listOfTestCases,columns:F.Km,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,filter:(0,L.ZP)(),pagination:(0,B.ZP)(),expandRow:t,cellEdit:(0,O.ZP)({mode:"click",blurToSave:!0,afterSaveCell:(t,e,a,s)=>{if(t!==e){var i=a.testid;void 0===b.C.UpdatedTestRowData[i]&&(b.C.UpdatedTestRowData[i]={}),b.C.UpdatedTestRowData[i][s.dataField]=e,b.C.UpdatedTestRowData[i].executedBy=j.Q.userEmail}},onStartEdit:(t,e,a,s)=>{6===s&&(this.setState({listOfDefectsForComponent:[]}),this.setState({selectedDefectId:[]}),this.setState({testIdToLinkDefect:t.testid}),this.setState({testComponentToLinkDefect:t.component}),this.setState({selectedRowNumber:t.id}),this.setState({isPageLoading:!0}),Promise.resolve(D.Z.getAllDefectFromComponent("/")).then((t=>{var e=[];for(let i=0;i<t.length;i++){var a=t[i].defectid,s=t[i].title;e.push({label:a+" : "+s,value:a})}this.setState({listOfDefectsForComponent:e})})),this.setState({isPageLoading:!1}),this.setState({modalForDefects:!0}))}}),selectRow:e})})})]})})}),(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsx)(o.Z,{children:(0,Q.jsxs)(c.Z,{children:[(0,Q.jsx)(Z(),{ref:this.notificationSystem}),(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Execution Results (",this.state.selectedTestPlan,")"]})]})})})}),(0,Q.jsxs)(n.Z,{children:[(0,Q.jsx)(r.Z,{lg:3,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsx)("div",{className:"d-flex justify-content-between align-items-center",children:"Execution Summary"})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(U.LD,{color:["#17E798","#F38295","#ffcc00","#A9A9A9","#5DADE2"],labels:["Pass","Fail","Pending","NA","Blocked"],data:this.state.executionSummaryData})})})]})}),(0,Q.jsxs)(r.Z,{lg:3,md:6,sm:6,xs:12,children:[(0,Q.jsx)(K.LR,{title:"Execution Progress",number:this.state.listOfTestCases.length,color:"info",progress:{value:this.state.testPlanCompletedProgress,label:"Completed"}}),(0,Q.jsx)("div",{}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(K.yE,{title:"Total Linked Defect",number:this.state.totalLinkedDefect,color:"black"})})]}),(0,Q.jsx)(r.Z,{lg:6,md:12,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:"Pass Fail Count Module Wise"}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(U.iT,{label:["Pass","Fail","Pending","NA","Blocked"],color:["#17E798","#F38295","#ffcc00","#A9A9A9","#5DADE2"],labels:this.state.executedComponentXaxis,data:this.state.executedComponentYaxis})})})]})})]}),(0,Q.jsxs)(n.Z,{children:[(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsxs)(c.Z,{children:["Defect",(0,Q.jsx)("small",{children:" Priority"})]}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(U.vz,{labels:this.state.defectPriorityXAxis,data:this.state.defectPriorityYAxis})})})]})}),(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsxs)(c.Z,{children:["Defect",(0,Q.jsx)("small",{children:" Status"})]}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(U.vz,{labels:this.state.defectStatusXaxis,data:this.state.defectStatusYAxis})})})]})}),(0,Q.jsx)(r.Z,{lg:6,md:6,sm:6,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsxs)(c.Z,{children:["Executed",(0,Q.jsx)("small",{children:" By"})]}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(U.vz,{labels:this.state.executedByXaxis,data:this.state.executedByYaxis,color:this.state.executedByColors})})})]})})]}),(0,Q.jsxs)(p.Z,{isOpen:this.state.modalForCustomFields,toggle:this.toggle,className:this.props.className,centered:!0,children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsxs)(y.Z,{toggle:this.toggleCustomField,children:["Choose value for custom key : ",this.state.customKeyNameToUpdate," "]}),(0,Q.jsx)(v.Z,{children:(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsx)(f.Z,{children:(0,Q.jsx)(S.Z,{col:"true",children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"select",onChange:this.selectCustomKeyValue.bind(this),name:"customKeySelection",value:this.state.selectedValueForCustomKey,children:(0,Q.jsx)(I.Z,{options:this.state.listOfCustomValueForKey})})})})})})})})]}),(0,Q.jsxs)(p.Z,{isOpen:this.state.modalForDefects,toggle:this.toggle,className:this.props.className,centered:!0,children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsxs)(y.Z,{toggle:this.toggleForDefectModal,children:["Link Defect for Test Case id ",this.state.testIdToLinkDefect]}),(0,Q.jsx)(v.Z,{children:(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(f.Z,{children:[(0,Q.jsx)(S.Z,{row:!0,children:(0,Q.jsxs)(g.Z,{sm:5,children:["Component : ",this.state.testComponentToLinkDefect]})}),(0,Q.jsxs)(S.Z,{col:"true",children:[(0,Q.jsx)(g.Z,{sm:5,children:"Select Defect id to Link"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(R.ZP,{defaultValue:this.state.selectedDefectId,value:this.state.selectedDefectId,isMulti:!0,name:"component",options:this.state.listOfDefectsForComponent,className:"basic-multi-select",classNamePrefix:"select",onChange:this.selectDefectToLink.bind(this)})})]}),(0,Q.jsx)(S.Z,{row:!0,children:(0,Q.jsxs)(C.Z,{size:"sm",children:[(0,Q.jsx)(x.Z,{color:"black",onClick:this.linkDefectToTestCaseExecutionTable.bind(this),children:(0,Q.jsx)("small",{children:"Link"})}),(0,Q.jsx)(x.Z,{color:"info",onClick:this.UnlinkDefectToTestCaseExecutionTable.bind(this),children:(0,Q.jsx)("small",{children:"Unlink"})})]})})]})})})})]}),(0,Q.jsxs)(p.Z,{isOpen:this.state.isBulkActionModal,className:this.props.className,backdrop:"static",children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsx)(y.Z,{toggle:this.toggleForBulkActionModal.bind(this),children:"Perform Bulk Action"}),(0,Q.jsx)(v.Z,{children:(0,Q.jsxs)(f.Z,{children:[(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:5,children:"Action*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)(T.Z,{type:"select",invalid:this.state.isErrorOnBulkActionKey,onChange:this.selectBulkActionKey.bind(this),name:"bulkactionKey",value:this.state.selectedBulkActionKey,children:[(0,Q.jsx)("option",{}),(0,Q.jsx)("option",{children:"Assigned to"}),(0,Q.jsx)("option",{children:"Status"})]})})]}),(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:5,children:"AssignedTo/Status*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)(T.Z,{type:"select",name:"listbulkvalue",invalid:this.state.isErrorOnBulkActionValue,onChange:this.selectBulkActionValue.bind(this),value:this.state.selectedBulkActionValue,children:[(0,Q.jsx)("option",{}),(0,Q.jsx)(I.Z,{options:this.state.listOfBulkActionValue})]})})]}),(0,Q.jsx)(S.Z,{row:!0,children:(0,Q.jsx)(C.Z,{size:"sm",children:(0,Q.jsx)(x.Z,{color:"black",onClick:this.performBulkAction.bind(this),children:(0,Q.jsx)("small",{children:"Update"})})})})]})})]}),(0,Q.jsxs)(p.Z,{size:"xl",isOpen:this.state.isEditTestPlanModal,className:this.props.className,backdrop:"static",children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsx)(y.Z,{toggle:this.toggleEditTestPlamModal.bind(this),children:"Edit Test Plan Details"}),(0,Q.jsx)(v.Z,{children:(0,Q.jsxs)(f.Z,{children:[(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Test Plan details",(0,Q.jsxs)(C.Z,{size:"sm",children:[(0,Q.jsx)(x.Z,{color:"black",name:"update",onClick:this.updateTestPlanAttribute.bind(this),children:(0,Q.jsx)("small",{children:"Update"})}),(0,Q.jsx)(x.Z,{color:"info",name:"update",onClick:this.OpenmodalForDeleteTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Delete Test Plan"})})]})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(r.Z,{style:{overflowX:"auto",maxWidth:"100%"},children:(0,Q.jsx)(N.Z,{keyField:"id",data:this.state.testPlanCustomDetailsForUpdate,columns:F.K7,wrapperClasses:"table-responsive",striped:!0,hover:!0,condensed:!0,cellEdit:(0,O.ZP)({mode:"click",blurToSave:!0,afterSaveCell:(t,e,a,s)=>{},onStartEdit:(t,e,a,s)=>{var i=t.key,l=t.value;if(b.C.CustomKeyListForListBoxOption.includes(i)){b.C.SelectedRowIDforUpdateCustomFieldTable=t.id,this.setState({selectedRowIDforUpdateCustomFieldTable:t.id}),b.C.CustomKeyNameToUpdate=i,this.setState({customKeyNameToUpdate:i});var n=b.C.CustomKeyListBoxWithKeyAnaValue[i];b.C.ListOfCustomValueForKey=n,this.setState({listOfCustomValueForKey:n}),b.C.SelectedValueForCustomKey=l,this.setState({selectedValueForCustomKey:l}),this.setState({modalForCustomFieldsToUpdate:!0})}}})})})})]})})}),(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsxs)(o.Z,{children:[(0,Q.jsx)(c.Z,{children:(0,Q.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Clone your test plan",(0,Q.jsx)(C.Z,{size:"sm",children:(0,Q.jsx)(x.Z,{color:"black",name:"update",onClick:this.cloneTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Clone"})})})]})}),(0,Q.jsx)(d.Z,{children:(0,Q.jsx)(S.Z,{row:!0,children:(0,Q.jsxs)(S.Z,{row:!0,children:[(0,Q.jsx)(g.Z,{sm:4,children:"Test Cycle*"}),(0,Q.jsx)(r.Z,{children:(0,Q.jsxs)(T.Z,{type:"select",invalid:this.state.isErrorOnTestCycleForCloning,name:"cloning",value:this.state.selectedTestCycleForCloning,onChange:this.selectTestCycleForCloning.bind(this),children:[(0,Q.jsx)("option",{}),(0,Q.jsx)(I.Z,{options:this.state.listOfTestCycleForNewTestPlan})]})})]})})})]})})})]})})]}),(0,Q.jsxs)(p.Z,{isOpen:this.state.modalForCustomFieldsToUpdate,toggle:this.toggle,className:this.props.className,centered:!0,children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsxs)(y.Z,{toggle:this.toggleCustomFieldToUpdate,children:["Choose value for custom key : ",this.state.customKeyNameToUpdate," "]}),(0,Q.jsx)(v.Z,{children:(0,Q.jsx)(n.Z,{children:(0,Q.jsx)(r.Z,{lg:12,md:12,sm:12,xs:12,children:(0,Q.jsx)(f.Z,{children:(0,Q.jsx)(S.Z,{col:"true",children:(0,Q.jsx)(r.Z,{children:(0,Q.jsx)(T.Z,{type:"select",onChange:this.selectCustomKeyValueToUpdate.bind(this),name:"customKeySelection",value:this.state.selectedValueForCustomKey,children:(0,Q.jsx)(I.Z,{options:this.state.listOfCustomValueForKey})})})})})})})})]}),(0,Q.jsxs)(p.Z,{isOpen:this.state.modalForDeleteTestPlan,toggle:this.toggle,className:this.props.className,children:[this.state.isPageLoading&&(0,Q.jsx)(A.Z,{sentences:k.b,height:"2000%",color:"black"}),(0,Q.jsx)(y.Z,{toggle:this.toggleDeleteTestPlan,children:"Confirmation"}),(0,Q.jsx)(v.Z,{children:"Are you sure,You want to delete the test plan? Test plan and associated results will be deleted."}),(0,Q.jsx)(P.Z,{children:(0,Q.jsxs)(C.Z,{size:"sm",children:[(0,Q.jsx)(x.Z,{color:"black",onClick:this.toggleDeleteTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Cancel"})}),(0,Q.jsx)(x.Z,{color:"info",onClick:this.deleteTestPlan.bind(this),children:(0,Q.jsx)("small",{children:"Yes"})})]})})]})]})}}const H=z;s()}catch(z){s(z)}}))},47757:(t,e,a)=>{a.d(e,{Z:()=>c});var s=a(99106),i=a(58390),l=a(58758),n=a(85002),r=a(79696),o=a(72638);const c=new class{async loadTestPlanPage(){try{await l.Z.manualConfigPageLoad();var t=await n.M.AllConfigData;await this.setCustomFieldData(await t),s.C.ExistingTestSuiteList=await this.getExistingTestSuite(),await this.setEnvironment(await t),s.C.ListOfTestCycle=await n.M.ListOfTestCycle,s.C.ListOfTestCycleForNewTestPlan=await n.M.ListOfTestCycle,s.C.SelectedTestCycle=await n.M.CurrentTestCycle,s.C.SelectedTestCycleForNewTestPlan=await n.M.CurrentTestCycle,s.C.ListOfTestPlan=await this.getAllTestPlanFromTestCycle(s.C.SelectedTestCycle),await this.getAllPlaceHolderName()}catch(e){}}async setEnvironment(t){if(i.D.isDemo)s.C.EnvironmentList=["QA"],s.C.SelectedEnvironment="QA";else{var e=await t.Environment;if(void 0===await e)s.C.EnvironmentList=[],s.C.SelectedEnvironment="";else if(0===await e.length)s.C.EnvironmentList=[],s.C.SelectedEnvironment="";else{var a=[];for(let t=0;t<await e.length;t++){var l=await e[t].name;a.push(await l)}s.C.EnvironmentList=await a,s.C.SelectedEnvironment=await a[0]}}}async getExistingTestSuite(){var t=[];if(i.D.isDemo)return t;try{var e=await localStorage.getItem("UserSelectedAccount"),a=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(a=i.D.remoteBackendAPI);var s={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},l=await r.Z.get(await a+"testsuite/project/"+await e+"/getalltestsuite",await s),n=await l.data;return await n}catch(o){n=[]}return t}async getListOfUser(){s.C.ListOfUsers=[];s.C.ListOfUsers.push(await{label:"",value:""});var t=await l.Z.getListOfUsers();for(let a=0;a<await t.length;a++){var e={label:await t[a],value:await t[a]};s.C.ListOfUsers.push(await e)}}async getAllTestPlanFromTestCycle(t){if(!i.D.isDemo)try{var e=await localStorage.getItem("UserSelectedAccount"),a={};a.testCycle=await t;var s=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(s=i.D.remoteBackendAPI);var l={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},n=await r.Z.post(await s+"testplan/project/"+e+"/gettestplanname",await l,await a),o=await n.data;return await o}catch(c){return[]}}async getAllPlaceHolderName(){if(!i.D.isDemo)try{var t=await localStorage.getItem("UserSelectedAccount"),e=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(e=i.D.remoteBackendAPI);var a={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},l=await r.Z.get(await e+"testplan/project/"+t+"/getallplaceholder",await a),n=await l.data;await n.length>0?(s.C.ListOfPlaceHolder=[],s.C.SelectedPlaceHolder="",s.C.ListOfPlaceHolder.push("All"),s.C.SelectedPlaceHolder="All",s.C.ListOfPlaceHolder=await s.C.ListOfPlaceHolder.concat(await n)):(s.C.ListOfPlaceHolder=[],s.C.SelectedPlaceHolder="")}catch(o){return[]}}async getTestPlanDetail(t,e){if(!i.D.isDemo)try{var a=await localStorage.getItem("UserSelectedAccount"),s={};s.testCycle=await t,s.testPlanName=await e;var l=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(l=i.D.remoteBackendAPI);var n={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},o=await r.Z.post(await l+"testplan/project/"+await a,await n,await s),c=await o.data;return await c}catch(d){return[]}}async loadAllTestCaseFromComponent(t){if(!i.D.isDemo)try{var e=await localStorage.getItem("UserSelectedAccount");s.C.ListOfUsers=[],await this.getListOfUser(),s.C.ListOfTestCases=[];var a={};a.placeHolderName=await t;var l=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(l=i.D.remoteBackendAPI);var n={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},o=await r.Z.post(await l+"testplan/project/"+e+"/getalltestcase",await n,await a),c=await o.data;return s.C.ListOfTestCases=await c,await c}catch(d){return[]}}async saveTestPlan(t,e,a,l){if(i.D.isDemo)return!0;try{var n=await localStorage.getItem("UserSelectedAccount"),o={};o.testPlanName=await t,o.testCycle=await e,o.testSuite=await l;var c=await i.Q.userEmail,d=await a,h=await s.C.NewTestPlanCustomField,w=await h.length;h.push({id:Number(await w)+1,key:"Environment",value:await d}),h.push({id:Number(await w)+2,key:"Created By",value:await c}),o.customFields=await h;var u=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(u=i.D.remoteBackendAPI);var m={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},C=await r.Z.post(await u+"testplan/project/"+await n+"/savetestplan",await m,await o),x=await C.data;return i.D.ErrorMessage=await x.errorMessage,await x.isFileSaved}catch(T){return[]}}async getselectedTestCase(t){var e=[],a=s.C.ListOfTestCases;for(let s=0;s<await t.length;s++){var i=Number(await t[Number(s)])-1,l={id:Number(s)+1,component:await a[await i].component,testid:await a[await i].testid,testname:await a[await i].testname,assignto:await a[await i].assignto,status:await a[await i].status};e.push(await l)}return await e}async generateGraphData(){var t=0,e=0,a=0,l=0,n=0,r=[],c=[],d={},h={},w=[],u=await s.C.ListOfTestCases;for(let s=0;s<await u.length;s++){var m=await u[s].linkeddefect;if(""!==await m){var C=await m.split(",");for(let t=0;t<await C.length;t++){var x=await C[t];await w.includes(await x)||w.push(await x)}}var T=await u[s].executedBy;""===await T&&(T=i.Q.userEmail);var f=await u[s].status;void 0!==await T&&("Pass"!==await f&&"Fail"!==await f&&"Blocked"!==await f||(void 0===await h[await T]?h[await T]=1:h[await T]=Number(await h[await T])+1));var S=await u[s].component;await r.includes(await S)||(r.push(await S),d[await S]={},d[await S].pass=0,d[await S].fail=0,d[await S].pending=0,d[await S].na=0,d[await S].blocked=0);var g=await u[s].status;switch(await g){case"Pending":a=await Number(await a)+1,d[await S].pending=await Number(d[await S].pending)+1;break;case"Pass":t=await Number(await t)+1,d[await S].pass=await Number(d[await S].pass)+1;break;case"Fail":e=await Number(await e)+1,d[await S].fail=await Number(d[await S].fail)+1;break;case"NA":l=await Number(await l)+1,d[await S].na=await Number(d[await S].na)+1;break;case"Blocked":n=await Number(await n)+1,d[await S].blocked=await Number(d[await S].blocked)+1}}s.C.ExecutionSummaryData.push(await t),s.C.ExecutionSummaryData.push(await e),s.C.ExecutionSummaryData.push(await a),s.C.ExecutionSummaryData.push(await l),s.C.ExecutionSummaryData.push(await n),s.C.ExecutedComponentXaxis=await r;var p=[],y=[],v=[],P=[],b=[];for(let s=0;s<await r.length;s++){var D=await r[s];p.push(await d[await D].pass),y.push(await d[await D].fail),v.push(await d[await D].pending),P.push(await d[await D].na),b.push(await d[await D].blocked)}c.push(await p),c.push(await y),c.push(await v),c.push(await P),c.push(await b),s.C.ExecutedComponentYaxis=await c;var j=await o.Z.getAllKeyValueInJsonArrayFromJsonObject(await h);s.C.ExecutedByXaxis=await j.key;var E=[];E.push(await j.value),s.C.ExecutedByYaxis=await E;var Z=await u.length,A=Number(await Number(await t)+await Number(await e)+await Number(l));const k=await(100*await(await A/await Z)).toFixed(0);if(s.C.TestPlanCompletedProgress=await k,s.C.TotalLinkedDefect=await w.length,await w.length>0){var F={},N={};for(let t=0;t<await w.length;t++){var O=await w[t],L=await this.getDefectDetailsBasedOnId(await O);if(void 0!==await L.status){var B=await L.status;void 0===await F[await B]?F[await B]=1:F[await B]=await Number(F[await B])+1}if(void 0!==await L.priority){var I=await L.priority;void 0===await N[await I]?N[await I]=1:N[await I]=await Number(N[await I])+1}}var U=await o.Z.getAllKeyValueInJsonArrayFromJsonObject(await F),K=await U.key,R=await U.value;s.C.DefectStatusXaxis=await K;var V=[];V.push(await R),s.C.DefectStatusYAxis=await V;var X=await o.Z.getAllKeyValueInJsonArrayFromJsonObject(await N);K=await X.key,R=await X.value,s.C.DefectPriorityXAxis=await K,(V=[]).push(await R),s.C.DefectPriorityYAxis=await V}}async deleteTestPlan(t,e){if(i.D.isDemo)return!0;try{var a=await localStorage.getItem("UserSelectedAccount"),s={};s.testplan=await e,s.testcycle=await t;var l=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(l=i.D.remoteBackendAPI);var n={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},o=await r.Z.post(await l+"testplan/project/"+await a+"/deletetestplan",await n,await s),c=await o.data;return i.D.ErrorMessage=await c.errorMessage,await c.isFileDeleted}catch(d){return[]}}async getTestCaseFromTestSuite(t){var e=[];if(i.D.isDemo)return e;try{var a=await localStorage.getItem("UserSelectedAccount"),s=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(s=i.D.remoteBackendAPI);var l={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},n=await r.Z.get(await s+"testsuite/project/"+await a+"/testsuitename/"+await t,await l),o=await n.data;e=await o}catch(c){e=[]}return e}async getTestDetailsBasedOnTestPath(t,e,a){if(i.D.isDemo)return await new Promise((t=>setTimeout(t,2e3))),!0;var s=await localStorage.getItem("UserSelectedAccount"),l={},n=await t+"/"+await e+"/"+await a;l.testPath=await n;var o=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(o=i.D.remoteBackendAPI);var c={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},d=await r.Z.post(await o+"manualtestcase/project/"+s+"/gettestiddetails",await c,await l),h=await d.data;return await h}async updateTestPlan(t,e,a,s,l,n,o,c){if(i.D.isDemo)return!0;try{var d=await localStorage.getItem("UserSelectedAccount"),h={};h.testPlanName=await t,h.testCycle=await e,h.AllTestCases=await a,h.testStepResultData=await s,h.comments=await l,h.attachments=await n,h.updateattachmentstestidtable=await c;var w=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(w=i.D.remoteBackendAPI);var u={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},m=await r.Z.post(await w+"testplan/project/"+await d+"/updatetestplan",await u,await h),C=await m.data;return i.D.ErrorMessage=await C.errorMessage,await C.isFileSaved&&await this.uploadUpdateandDeleteFileToServer(await o,await e,await t),await C.isFileSaved}catch(x){return[]}}async uploadUpdateandDeleteFileToServer(t,e,a){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var l="",n=await Object.keys(await t);if(await n.length>0)for(let s=0;s<await n.length;s++){l=await n[s];var r=await t[await l];if(await r.length>0)for(let t=0;t<await await r.length;t++)await this.uploadFileToServer(await r[t],e,a,await l+"_")}var o=await s.C.TestExecutionAttachmentNameForDelete,c=await Object.keys(await o);if(await c.length>0)for(let t=0;t<await c.length;t++){l=await c[t];var d=await o[await l];if(await d.length>0)for(let t=0;t<await d.length;t++){var h=await d[t];await this.deleteTestFileFromServer(await e,await a,await l+"_"+h)}}}catch(w){i.D.ErrorMessage=await w.message}}async deleteTestFileFromServer(t,e,a){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var s=await localStorage.getItem("UserSelectedAccount"),l=await i.D.backendAPI;"remote"===i.D.backendServiceAt&&(l=await i.D.remoteBackendAPI);var n={};n.testcycle=await t,n.testplan=await e,n.filename=await a;var o={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},c=await r.Z.post(l+"fileupload/project/"+await s+"/deletetestexecutionfile",await o,await n),d=await c.data;return await d}catch(h){i.D.ErrorMessage=await h.message}}async uploadFileToServer(t,e,a,s){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var l="TestPlan/"+await e+"/"+await a+"/",n=await localStorage.getItem("UserSelectedAccount"),o=await i.D.backendAPI;"remote"===i.D.backendServiceAt&&(o=await i.D.remoteBackendAPI);let w=new FormData;w.append("file",await t);var c={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail,"Content-Type":"multipart/form-data",foldername:await l,prefix:await s},d=await r.Z.post(o+"fileupload/project/"+await n+"/addattachment",await c,await w),h=await d.data;return await h}catch(w){i.D.ErrorMessage=await w.message}}async setCustomFieldData(t){if(i.D.isDemo)s.C.NewTestPlanCustomField=[];else try{var e=await t.TestPlanCustomKeys;if(void 0===await e)s.C.NewTestPlanCustomField=[];else if(0===await e.length)s.C.NewTestPlanCustomField=[];else{var a=[];s.C.CustomKeyListForListBoxOption=[],s.C.CustomKeyListBoxWithKeyAnaValue={};for(let t=0;t<await e.length;t++){var l=await e[t].key,n="",r=await e[t].value;if(""!==await r){r=await JSON.parse(await r);var o=await r;s.C.CustomKeyListForListBoxOption.push(await l),await r.length>0&&(n=await r[0])}var c={id:Number(t)+1,key:await l,value:await n};a.push(await c),void 0===s.C.CustomKeyListBoxWithKeyAnaValue[await l]&&(s.C.CustomKeyListBoxWithKeyAnaValue[await l]=await o)}s.C.NewTestPlanCustomField=await a}}catch(d){s.C.NewTestPlanCustomField=[]}}async getAllDefectFromComponent(t){if(i.D.isDemo)return await new Promise((t=>setTimeout(t,2e3))),[{id:1,defectid:"DF-1",title:"My dummy defect",component:"Landing Page",priority:"Medium",severity:"Low",status:"Open",assignto:"dummyuser@test.com",cycle:"Sprint 12.0",testid:"",createdby:"Pravesh",customkey:""}];try{var e=await localStorage.getItem("UserSelectedAccount"),a={};a.componentPath=await t;var s=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(s=i.D.remoteBackendAPI);var l={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},n=await r.Z.post(await s+"defect/project/"+e+"/getalldefects",await l,await a),o=await n.data;return await o}catch(c){return[]}}async getDefectDetailsBasedOnId(t){if(i.D.isDemo)return await new Promise((t=>setTimeout(t,2e3))),{};try{var e=await localStorage.getItem("UserSelectedAccount"),a=i.D.backendAPI;"remote"===await i.D.backendServiceAt&&(a=i.D.remoteBackendAPI);var s={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},l=await r.Z.get(await a+"defect/project/"+e+"/defectid/"+await t,await s),n=await l.data;return await n}catch(o){return{}}}async downloadFromServer(t,e){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var a=await localStorage.getItem("UserSelectedAccount"),s=await i.D.backendAPI;"remote"===i.D.backendServiceAt&&(s=await i.D.remoteBackendAPI);var l={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail,foldername:await t,filename:await e},n=await r.Z.get(s+"fileupload/project/"+await a+"/downloadattachment",await l),o=await n.data;if(await o.isSuccess){const t=await atob(await o.content),a=await new Uint8Array([...t].map((t=>t.charCodeAt(0)))),s=new Blob([await a],{type:await o["content-type"]}),i=await document.createElement("a");i.setAttribute("download",await e),i.href=await window.URL.createObjectURL(await s),await document.body.appendChild(await i),await i.click(),await document.body.removeChild(i)}else i.D.ErrorMessage=await o.errorMessage;return await o.isSuccess}catch(c){i.D.ErrorMessage=await c.message}}async updateTestPlanAttribue(t,e,a){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var s=await localStorage.getItem("UserSelectedAccount"),l=await i.D.backendAPI;"remote"===i.D.backendServiceAt&&(l=await i.D.remoteBackendAPI);var n={};n.testcycle=await t,n.testplan=await e,n.customFields=await a;var o={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},c=await r.Z.post(l+"testplan/project/"+await s+"/updatetestplanattribute",await o,await n),d=await c.data;return await d.isSuccess}catch(h){i.D.ErrorMessage=await h.message}}async cloneTestPlan(t,e,a){if(await i.D.isDemo)return await new Promise((t=>setTimeout(t,3e3))),!0;try{var s=await localStorage.getItem("UserSelectedAccount"),l=await i.D.backendAPI;"remote"===i.D.backendServiceAt&&(l=await i.D.remoteBackendAPI);var n={};n.testcycle=await t,n.testplan=await e,n.newtestcycle=await a;var o={Authorization:await i.Q.userToken,userEmail:await i.Q.userEmail},c=await r.Z.post(l+"testplan/project/"+await s+"/clonetestplan",await o,await n),d=await c.data;return await d.isSuccess}catch(h){i.D.ErrorMessage=await h.message}}}},72102:(t,e,a)=>{a.d(e,{vz:()=>w,iT:()=>x,LD:()=>c,wW:()=>m});a(47313),a(66982);var s=a(88501),i=a(22123),l=a(75743),n=a(92234),r=a(46417);s.kL.register(s.qi,s.u,s.De),s.kL.register(i.Z);const o=t=>{let{...e}=t;var a={...e}.labels,s={...e}.data,i={...e}.color,o=[];if(void 0===i||0===i.length){const t=s.map((()=>Promise.resolve(n.Z.gerHexaColorCode())));Promise.all(t).then((t=>{o.push(...t)})).catch((t=>{console.error(t)}))}else o=i;var c={labels:a,datasets:[{data:s,backgroundColor:o,borderColor:o,borderWidth:2,cutout:"80%",borderRadius:10}]};return(0,r.jsx)(l.$I,{data:c,options:{responsive:!0,plugins:{legend:{position:"bottom",display:!0},datalabels:{color:"white",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}}}}})};o.defaultProps={labels:[],data:[],color:[]};const c=o;var d=a(3551);d.ZP.register(i.Z);const h=t=>{let{...e}=t;var a=!1,s={...e}.labels,i={...e}.data,o={...e}.color,c={...e}.label,d=[];for(let l=0;l<i.length;l++){var h={label:""};h.data=i[l],h.borderWidth=2,d.push(h)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===o||0===o.length)for(let l=0;l<d.length;l++){Promise.resolve(n.Z.gerHexaColorCode()).then((t=>{d[l].backgroundColor=t}))}else for(let l=0;l<d.length;l++)d[l].backgroundColor=o[l];var w={labels:s,datasets:d},u={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{ticks:{callback:function(t,e,a){var i=s[e];if(void 0!==i)return i.length>10?i.substring(0,10)+"...":i}}}}};return(0,r.jsx)(l.$Q,{options:u,data:w})};h.defaultProps={labels:[],data:[],color:[],label:[]};const w=h,u=t=>{let{...e}=t;var a=!1,s={...e}.labels,i={...e}.data,o={...e}.color,c={...e}.label,d=[];for(let l=0;l<i.length;l++){var h={label:""};h.data=i[l],h.borderWidth=3,h.tension=.1,d.push(h)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===o||0===o.length)for(let l=0;l<d.length;l++){Promise.resolve(n.Z.gerHexaColorCode()).then((t=>{d[l].borderColor=t}))}else for(let l=0;l<d.length;l++)d[l].borderColor=o[l];var w={labels:s,datasets:d},u={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{ticks:{callback:function(t,e,a){var i=s[e];if(void 0!==i)return i.length>11?i.substring(0,11)+"...":i}}}}};return(0,r.jsx)(l.x1,{data:w,options:u})};u.defaultProps={labels:[],data:[],color:[],label:[]};const m=u;d.ZP.register(i.Z);const C=t=>{let{...e}=t;var a=!1,s={...e}.labels,i={...e}.data,o={...e}.color,c={...e}.label,d=[];for(let l=0;l<i.length;l++){var h={label:""};h.data=i[l],h.borderColor="#000000",h.borderWidth=2,d.push(h)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===o||0===o.length)for(let l=0;l<d.length;l++){Promise.resolve(n.Z.gerHexaColorCode()).then((t=>{d[l].backgroundColor=t}))}else for(let l=0;l<d.length;l++)d[l].backgroundColor=o[l];var w={labels:s,datasets:d},u={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{stacked:!0,ticks:{callback:function(t){var e=s[t];if(void 0!==e)return e.length>10?e.substring(0,10)+"...":e}}},y:{stacked:!0}}};return(0,r.jsx)(l.$Q,{options:u,data:w})};C.defaultProps={labels:[],data:[],color:[],label:[]};const x=C},12944:(t,e,a)=>{a.d(e,{LR:()=>d,yE:()=>T});a(47313),a(66982);var s=a(70238),i=a(52770),l=a(63953),n=a(35977),r=a(35277),o=a(46417);const c=t=>{let{title:e,subtitle:a,number:c,color:d,progress:{value:h,label:w},...u}=t;return(0,o.jsxs)(s.Z,{body:!0,...u,children:[(0,o.jsxs)("div",{className:"d-flex justify-content-between",children:[(0,o.jsxs)(i.Z,{tag:"div",children:[(0,o.jsx)(r.Z,{className:"mb-0",children:(0,o.jsx)("strong",{children:e})}),(0,o.jsx)(r.Z,{className:"mb-0 text-muted small",children:a})]}),(0,o.jsx)(l.Z,{className:"text-black",children:c})]}),(0,o.jsx)(n.Z,{value:Number(h),color:d,style:{height:"8px"}}),(0,o.jsxs)(i.Z,{tag:"div",className:"d-flex justify-content-between",children:[(0,o.jsx)(r.Z,{tag:"span",className:"text-left text-muted small",children:w}),(0,o.jsxs)(r.Z,{tag:"span",className:"text-right text-muted small",children:[Number(h),"%"]})]})]})};c.defaultProps={title:"",subtitle:"",number:0,color:"primary",progress:{value:0,label:""}};const d=c;var h=a(46123),w=a.n(h),u=a(33516),m=a(56581);const C=t=>{let{bgColor:e,icon:a,iconProps:i,title:n,subtitle:r,className:c,...d}=t;const h=w()("cr-widget",c,{["bg-".concat(e)]:e});return(0,o.jsxs)(s.Z,{inverse:!0,className:h,...d,children:[(0,o.jsx)(u.Z,{className:"cr-widget__icon",children:(0,o.jsx)(a,{size:50,...i})}),(0,o.jsxs)(u.Z,{children:[(0,o.jsx)(l.Z,{children:n}),(0,o.jsx)(m.Z,{children:r})]})]})};C.defaultProps={bgColor:"primary",icon:"span",iconProps:{size:50}};const x=t=>{let{title:e,number:a,color:n,...c}=t;return(0,o.jsx)(s.Z,{body:!0,...c,children:(0,o.jsxs)("div",{className:"d-flex justify-content-between",children:[(0,o.jsx)(i.Z,{tag:"div",children:(0,o.jsx)(r.Z,{className:"mb-0",children:(0,o.jsx)("strong",{children:e})})}),(0,o.jsx)(l.Z,{className:"text-".concat(n),children:a})]})})};x.defaultProps={title:"",number:0,color:"black"};const T=x}}]);