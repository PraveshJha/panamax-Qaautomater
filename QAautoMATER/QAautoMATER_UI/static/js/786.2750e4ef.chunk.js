"use strict";(self.webpackChunkqaautomater=self.webpackChunkqaautomater||[]).push([[786],{83786:(t,e,a)=>{a.r(e),a.d(e,{default:()=>Y});var s=a(66075),o=a(47313),i=a(40106),r=a(66782),l=a(25399),n=a(70238),c=a(52527),d=a(1781),C=a(33516),x=a(12944),h={ListOfTestCycle:[],SelectedTestCycle:"",TotalTestCase:0,TotalDefects:0,TotalTestPlan:0,TotalTestCaseOnLastExecution:0,PassPercentageInLastExecution:0,AutomatedandNotAutomatedData:[],ColorCodeForAutomatedGraph:[],TestPriorityDataXaxis:[],TestPriorityDataYaxis:[],ColorCodeForTestPriority:[],ComponentTestCaseCountXaxisData:[],ComponentTestCaseCountYaxisData:[],ColorCodeForComponentTestCaseCount:[],DefectPriorityDataXaxis:[],DefectPriorityDataYaxis:[],DefectSeverityDataXaxis:[],DefectSeverityDataYaxis:[],ColorCodeOfDefectPriority:[],DefectComponentDataXaxis:[],DefectComponentDataYAxis:[],ColorCodeForDefectComponentData:[],DefectStatusDataXaxis:[],DefectStatusDataYaxis:[],ColorCodeOfDefectStatus:[],TestPlanTotalDataXaxis:[],TestPlanTotalDataYaxis:[],ColorCodeOfTestPlanTotalData:[],TestPlanExecutedComponentXaxis:[],TestPlanExecutedComponentYaxis:[],TestPlanTestSuiteXaxis:[],TestPlanTestSuiteYaxis:[],TestCaseCreatedByXaxis:[],TestCaseCreatedByYaxis:[],ColorCodeOfTestCaseCreatedBy:[],DefectCreatedByXaxis:[],DefectCreatedByYaxis:[],ColorCodeOfDefectCreatedBy:[],TestCaseExecutedByXaxis:[],TestCaseExecutedByYaxis:[],ColorCodeOfTestCaseExecutedBy:[],TestCaseCustomFieldGraphData:[],DefectCustomFieldGraphData:[]},u=a(58390),D=a(58758),f=a(85002),y=a(79696),m=a(72638);const T=new class{async loadDashboardPage(){try{await D.Z.manualConfigPageLoad(),h.ListOfTestCycle=await f.M.ListOfTestCycle,h.SelectedTestCycle=await f.M.CurrentTestCycle,await this.getDashBoardData(h.SelectedTestCycle)}catch(t){}}async getDashBoardData(t){if(await u.D.isDemo);else{if(""===await t||void 0===await t)return;try{var e=await localStorage.getItem("UserSelectedAccount"),a={};a.testCycle=await t;var s=u.D.backendAPI;"remote"===await u.D.backendServiceAt&&(s=u.D.remoteBackendAPI);var o={Authorization:await u.Q.userToken,userEmail:await u.Q.userEmail},i=await y.Z.post(await s+"manualdashboard/project/"+await e+"/getdashboarddata",await o,await a),r=await i.data;h.TotalTestCase=await r.totaltestcase,h.TotalDefects=await r.totaldefect,h.TotalTestPlan=await r.totaltestplan,h.TotalTestCaseOnLastExecution=await r.totaltestcaseonlastexecution,h.PassPercentageInLastExecution=await r.passpercentageinlastexecution,h.AutomatedandNotAutomatedData=await r.automatedgraphdata;var l=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.testprioritydata);h.TestPriorityDataXaxis=await l.key,h.TestPriorityDataYaxis=await l.value;var n=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.componenttestcasedata);h.ComponentTestCaseCountXaxisData=[],h.ComponentTestCaseCountYaxisData=[],h.ComponentTestCaseCountXaxisData=await n.key,h.ComponentTestCaseCountYaxisData.push(await n.value),h.DefectPriorityDataXaxis=[],h.DefectPriorityDataYaxis=[];var c=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.defectprioritydata);h.DefectPriorityDataXaxis=await c.key,h.DefectPriorityDataYaxis=await c.value,h.DefectSeverityDataXaxis=[],h.DefectSeverityDataYaxis=[];var d=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.defectseveritydata);h.DefectSeverityDataXaxis=await d.key,h.DefectSeverityDataYaxis=await d.value;var C=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.defectComponentData);h.DefectComponentDataXaxis=[],h.DefectComponentDataYAxis=[],h.DefectComponentDataXaxis=await C.key,h.DefectComponentDataYAxis.push(await C.value);var x=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.defectStatusData);h.DefectStatusDataXaxis=await x.key,h.DefectStatusDataYaxis=await x.value;var D=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.testPlanTotalTestData);h.TestPlanTotalDataXaxis=await D.key,h.TestPlanTotalDataYaxis=await D.value,h.TestPlanExecutedComponentXaxis=await r.testPlanComponentPassFailXaxis,h.TestPlanExecutedComponentYaxis=await r.testPlanComponentPassFailYaxis,h.TestPlanTestSuiteXaxis=await r.testPlanPassFailXaxis,h.TestPlanTestSuiteYaxis=await r.testPlanPassFailYaxis;var f=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.testCaseCreationByUser);h.TestCaseCreatedByXaxis=[],h.TestCaseCreatedByYaxis=[],h.TestCaseCreatedByXaxis=await f.key,h.TestCaseCreatedByYaxis.push(await f.value);var T=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.defectCreationByUser);h.DefectCreatedByXaxis=[],h.DefectCreatedByYaxis=[],h.DefectCreatedByXaxis=await T.key,h.DefectCreatedByYaxis.push(await T.value);var p=await m.Z.getAllKeyValueInJsonArrayFromJsonObject(await r.testCaseExecutedByUser);return h.TestCaseExecutedByXaxis=[],h.TestCaseExecutedByYaxis=[],h.TestCaseExecutedByXaxis=await p.key,h.TestCaseExecutedByYaxis.push(await p.value),h.TestCaseCustomFieldGraphData=[],h.TestCaseCustomFieldGraphData=await r.testCaseCustomFieldGraphData,h.DefectCustomFieldGraphData=[],h.DefectCustomFieldGraphData=await r.defectCustomFieldGraphData,await r}catch(P){h.TotalTestCase=0,h.TotalDefects=0,h.TotalTestPlan=0,h.TotalTestCaseOnLastExecution=0,h.PassPercentageInLastExecution=0,h.AutomatedandNotAutomatedData=[],h.TestPriorityDataXaxis=[],h.TestPriorityDataYaxis=[],h.ComponentTestCaseCountXaxisData=[],h.ComponentTestCaseCountYaxisData=[],h.DefectPriorityDataXaxis=[],h.DefectPriorityDataYaxis=[],h.DefectComponentDataXaxis=[],h.DefectComponentDataYAxis=[],h.DefectStatusDataXaxis=[],h.DefectStatusDataYaxis=[],h.TestPlanTotalDataXaxis=[],h.TestPlanTotalDataYaxis=[],h.TestPlanExecutedComponentXaxis=[],h.TestPlanExecutedComponentYaxis=[],h.TestPlanTestSuiteXaxis=[],h.TestPlanTestSuiteYaxis=[],h.TestCaseCreatedByXaxis=[],h.TestCaseCreatedByYaxis=[],h.DefectCreatedByXaxis=[],h.DefectCreatedByYaxis=[],h.TestCaseExecutedByXaxis=[],h.TestCaseExecutedByYaxis=[],h.TestCaseCustomFieldGraphData=[],h.DefectCustomFieldGraphData=[],h.DefectSeverityDataXaxis=[],h.DefectSeverityDataYaxis=[]}}}};a(34100),a(44);var p=a(16939),P=a.n(p),g=(a(18137),a(50207)),j=a(4104),b=(a(61123),a(94230),a(78944)),S=a(72102),Z=a(92234),X=a(46417);class v extends o.Component{constructor(){super(...arguments),this.notificationSystem=o.createRef(),this.state={isPageLoading:!1,listOfTestCycle:h.ListOfTestCycle,selectedTestCycle:h.SelectedTestCycle,totalTestCase:h.TotalTestCase,totalDefects:h.TotalDefects,totalTestPlan:h.TotalTestPlan,totalTestCaseOnLastExecution:h.TotalTestCaseOnLastExecution,passPercentageInLastExecution:h.PassPercentageInLastExecution,automatedandNotAutomatedData:h.AutomatedandNotAutomatedData,colorCodeForAutomatedGraph:h.ColorCodeForAutomatedGraph,testPriorityDataXaxis:h.TestPriorityDataXaxis,testPriorityDataYaxis:h.TestPriorityDataYaxis,colorCodeForTestPriority:h.ColorCodeForTestPriority,componentTestCaseCountXaxisData:h.ComponentTestCaseCountXaxisData,componentTestCaseCountYaxisData:h.ComponentTestCaseCountYaxisData,colorCodeForComponentTestCaseCount:h.ColorCodeForComponentTestCaseCount,defectPriorityDataXaxis:h.DefectPriorityDataXaxis,defectPriorityDataYaxis:h.DefectPriorityDataYaxis,colorCodeOfDefectPriority:h.ColorCodeOfDefectPriority,defectSeverityDataXaxis:h.DefectSeverityDataXaxis,defectSeverityDataYaxis:h.DefectSeverityDataYaxis,defectComponentDataXaxis:h.DefectComponentDataXaxis,defectComponentDataYAxis:h.DefectComponentDataYAxis,colorCodeForDefectComponentData:h.ColorCodeForDefectComponentData,defectStatusDataXaxis:h.DefectStatusDataXaxis,defectStatusDataYaxis:h.DefectStatusDataYaxis,colorCodeOfDefectStatus:h.ColorCodeOfDefectStatus,testPlanTotalDataXaxis:h.TestPlanTotalDataXaxis,testPlanTotalDataYaxis:h.TestPlanTotalDataYaxis,colorCodeOfTestPlanTotalData:h.ColorCodeOfTestPlanTotalData,testPlanExecutedComponentXaxis:h.TestPlanExecutedComponentXaxis,testPlanExecutedComponentYaxis:h.TestPlanExecutedComponentYaxis,testPlanTestSuiteXaxis:h.TestPlanTestSuiteXaxis,testPlanTestSuiteYaxis:h.TestPlanTestSuiteYaxis,testCaseCreatedByXaxis:h.TestCaseCreatedByXaxis,testCaseCreatedByYaxis:h.TestCaseCreatedByYaxis,colorCodeOfTestCaseCreatedBy:h.ColorCodeOfTestCaseCreatedBy,defectCreatedByXaxis:h.DefectCreatedByXaxis,defectCreatedByYaxis:h.DefectCreatedByYaxis,colorCodeOfDefectCreatedBy:h.ColorCodeOfDefectCreatedBy,testCaseExecutedByXaxis:h.TestCaseExecutedByXaxis,testCaseExecutedByYaxis:h.TestCaseExecutedByYaxis,colorCodeOfTestCaseExecutedBy:h.ColorCodeOfTestCaseExecutedBy,testCaseCustomFieldGraphData:h.TestCaseCustomFieldGraphData,defectCustomFieldGraphData:h.DefectCustomFieldGraphData},this.componentDidMount=async()=>{await window.scrollTo(0,0),this.setState({isPageLoading:!0}),await T.loadDashboardPage(),this.setState({listOfTestCycle:h.ListOfTestCycle}),this.setState({selectedTestCycle:h.SelectedTestCycle}),this.setState({totalTestCase:h.TotalTestCase}),this.setState({totalDefects:h.TotalDefects}),this.setState({totalTestPlan:h.TotalTestPlan}),this.setState({totalTestCaseOnLastExecution:h.TotalTestCaseOnLastExecution}),this.setState({passPercentageInLastExecution:h.PassPercentageInLastExecution}),this.setState({automatedandNotAutomatedData:h.AutomatedandNotAutomatedData}),h.ColorCodeForAutomatedGraph=await Z.Z.gerHexaColorCodeForArray(3),this.setState({colorCodeForAutomatedGraph:h.ColorCodeForAutomatedGraph}),this.setState({testPriorityDataXaxis:h.TestPriorityDataXaxis}),this.setState({testPriorityDataYaxis:h.TestPriorityDataYaxis}),this.setState({defectSeverityDataXaxis:h.DefectSeverityDataXaxis}),this.setState({defectSeverityDataYaxis:h.DefectSeverityDataYaxis}),h.ColorCodeForTestPriority=await Z.Z.gerHexaColorCodeForArray(h.TestPriorityDataXaxis.length),this.setState({colorCodeForTestPriority:h.ColorCodeForTestPriority}),this.setState({componentTestCaseCountXaxisData:h.ComponentTestCaseCountXaxisData}),this.setState({componentTestCaseCountYaxisData:h.ComponentTestCaseCountYaxisData}),h.ColorCodeForComponentTestCaseCount=await Z.Z.gerHexaColorCodeForArray(h.ComponentTestCaseCountXaxisData.length),this.setState({colorCodeForComponentTestCaseCount:h.ColorCodeForComponentTestCaseCount}),this.setState({defectPriorityDataXaxis:h.DefectPriorityDataXaxis}),this.setState({defectPriorityDataYaxis:h.DefectPriorityDataYaxis}),h.ColorCodeOfDefectPriority=await Z.Z.gerHexaColorCodeForArray(h.DefectPriorityDataXaxis.length),this.setState({colorCodeOfDefectPriority:h.ColorCodeOfDefectPriority}),this.setState({defectComponentDataXaxis:h.DefectComponentDataXaxis}),this.setState({defectComponentDataYAxis:h.DefectComponentDataYAxis}),h.ColorCodeForDefectComponentData=await Z.Z.gerHexaColorCodeForArray(h.DefectComponentDataXaxis.length),this.setState({colorCodeForDefectComponentData:h.ColorCodeForDefectComponentData}),this.setState({defectStatusDataXaxis:h.DefectStatusDataXaxis}),this.setState({defectStatusDataYaxis:h.DefectStatusDataYaxis}),h.ColorCodeOfDefectStatus=await Z.Z.gerHexaColorCodeForArray(h.DefectStatusDataXaxis.length),this.setState({colorCodeOfDefectStatus:h.ColorCodeOfDefectStatus}),this.setState({testPlanTotalDataXaxis:h.TestPlanTotalDataXaxis}),this.setState({testPlanTotalDataYaxis:h.TestPlanTotalDataYaxis}),h.ColorCodeOfTestPlanTotalData=await Z.Z.gerHexaColorCodeForArray(h.TestPlanTotalDataXaxis.length),this.setState({colorCodeOfTestPlanTotalData:h.ColorCodeOfTestPlanTotalData}),this.setState({testPlanExecutedComponentXaxis:h.TestPlanExecutedComponentXaxis}),this.setState({testPlanExecutedComponentYaxis:h.TestPlanExecutedComponentYaxis}),this.setState({testPlanTestSuiteXaxis:h.TestPlanTestSuiteXaxis}),this.setState({testPlanTestSuiteYaxis:h.TestPlanTestSuiteYaxis}),this.setState({testCaseCreatedByXaxis:h.TestCaseCreatedByXaxis}),this.setState({testCaseCreatedByYaxis:h.TestCaseCreatedByYaxis}),h.ColorCodeOfTestCaseCreatedBy=await Z.Z.gerHexaColorCodeForArray(h.TestCaseCreatedByXaxis.length),this.setState({colorCodeOfTestCaseCreatedBy:h.ColorCodeOfTestCaseCreatedBy}),this.setState({defectCreatedByXaxis:h.DefectCreatedByXaxis}),this.setState({defectCreatedByYaxis:h.DefectCreatedByYaxis}),h.ColorCodeOfDefectCreatedBy=await Z.Z.gerHexaColorCodeForArray(h.DefectCreatedByXaxis.length),this.setState({colorCodeOfDefectCreatedBy:h.ColorCodeOfDefectCreatedBy}),this.setState({testCaseExecutedByXaxis:h.TestCaseExecutedByXaxis}),this.setState({testCaseExecutedByYaxis:h.TestCaseExecutedByYaxis}),h.ColorCodeOfTestCaseExecutedBy=await Z.Z.gerHexaColorCodeForArray(h.TestCaseExecutedByXaxis.length),this.setState({colorCodeOfTestCaseExecutedBy:h.ColorCodeOfTestCaseExecutedBy}),this.setState({testCaseCustomFieldGraphData:h.TestCaseCustomFieldGraphData}),this.setState({defectCustomFieldGraphData:h.DefectCustomFieldGraphData}),this.setState({isPageLoading:!1})},this.getNotification=async(t,e)=>{this.notificationSystem.current.addNotification({message:e,level:t,autoDismiss:10})},this.selectTestCycle=async t=>{var e=await t.target.value;await this.state.selectedTestCycle!==await e&&(h.SelectedTestCycle=await e,this.setState({selectedTestCycle:await e}),this.setState({isPageLoading:!0}),await T.getDashBoardData(await e),this.setState({totalTestCase:h.TotalTestCase}),this.setState({totalDefects:h.TotalDefects}),this.setState({totalTestPlan:h.TotalTestPlan}),this.setState({totalTestCaseOnLastExecution:h.TotalTestCaseOnLastExecution}),this.setState({passPercentageInLastExecution:h.PassPercentageInLastExecution}),this.setState({automatedandNotAutomatedData:h.AutomatedandNotAutomatedData}),h.ColorCodeForAutomatedGraph=await Z.Z.gerHexaColorCodeForArray(3),this.setState({colorCodeForAutomatedGraph:h.ColorCodeForAutomatedGraph}),this.setState({testPriorityDataXaxis:h.TestPriorityDataXaxis}),this.setState({testPriorityDataYaxis:h.TestPriorityDataYaxis}),h.ColorCodeForTestPriority=await Z.Z.gerHexaColorCodeForArray(h.TestPriorityDataXaxis.length),this.setState({colorCodeForTestPriority:h.ColorCodeForTestPriority}),this.setState({componentTestCaseCountXaxisData:h.ComponentTestCaseCountXaxisData}),this.setState({componentTestCaseCountYaxisData:h.ComponentTestCaseCountYaxisData}),h.ColorCodeForComponentTestCaseCount=await Z.Z.gerHexaColorCodeForArray(h.ComponentTestCaseCountXaxisData.length),this.setState({colorCodeForComponentTestCaseCount:h.ColorCodeForComponentTestCaseCount}),this.setState({defectPriorityDataXaxis:h.DefectPriorityDataXaxis}),this.setState({defectPriorityDataYaxis:h.DefectPriorityDataYaxis}),this.setState({defectSeverityDataXaxis:h.DefectSeverityDataXaxis}),this.setState({defectSeverityDataYaxis:h.DefectSeverityDataYaxis}),h.ColorCodeOfDefectPriority=await Z.Z.gerHexaColorCodeForArray(h.DefectPriorityDataXaxis.length),this.setState({colorCodeOfDefectPriority:h.ColorCodeOfDefectPriority}),this.setState({defectComponentDataXaxis:h.DefectComponentDataXaxis}),this.setState({defectComponentDataYAxis:h.DefectComponentDataYAxis}),h.ColorCodeForDefectComponentData=await Z.Z.gerHexaColorCodeForArray(h.DefectComponentDataXaxis.length),this.setState({colorCodeForDefectComponentData:h.ColorCodeForDefectComponentData}),this.setState({defectStatusDataXaxis:h.DefectStatusDataXaxis}),this.setState({defectStatusDataYaxis:h.DefectStatusDataYaxis}),h.ColorCodeOfDefectStatus=await Z.Z.gerHexaColorCodeForArray(h.DefectStatusDataXaxis.length),this.setState({colorCodeOfDefectStatus:h.ColorCodeOfDefectStatus}),this.setState({testPlanTotalDataXaxis:h.TestPlanTotalDataXaxis}),this.setState({testPlanTotalDataYaxis:h.TestPlanTotalDataYaxis}),h.ColorCodeOfTestPlanTotalData=await Z.Z.gerHexaColorCodeForArray(h.TestPlanTotalDataXaxis.length),this.setState({colorCodeOfTestPlanTotalData:h.ColorCodeOfTestPlanTotalData}),this.setState({testPlanExecutedComponentXaxis:h.TestPlanExecutedComponentXaxis}),this.setState({testPlanExecutedComponentYaxis:h.TestPlanExecutedComponentYaxis}),this.setState({testPlanTestSuiteXaxis:h.TestPlanTestSuiteXaxis}),this.setState({testPlanTestSuiteYaxis:h.TestPlanTestSuiteYaxis}),this.setState({testCaseCreatedByXaxis:h.TestCaseCreatedByXaxis}),this.setState({testCaseCreatedByYaxis:h.TestCaseCreatedByYaxis}),h.ColorCodeOfTestCaseCreatedBy=await Z.Z.gerHexaColorCodeForArray(h.TestCaseCreatedByXaxis.length),this.setState({colorCodeOfTestCaseCreatedBy:h.ColorCodeOfTestCaseCreatedBy}),this.setState({defectCreatedByXaxis:h.DefectCreatedByXaxis}),this.setState({defectCreatedByYaxis:h.DefectCreatedByYaxis}),h.ColorCodeOfDefectCreatedBy=await Z.Z.gerHexaColorCodeForArray(h.DefectCreatedByXaxis.length),this.setState({colorCodeOfDefectCreatedBy:h.ColorCodeOfDefectCreatedBy}),this.setState({testCaseExecutedByXaxis:h.TestCaseExecutedByXaxis}),this.setState({testCaseExecutedByYaxis:h.TestCaseExecutedByYaxis}),h.ColorCodeOfTestCaseExecutedBy=await Z.Z.gerHexaColorCodeForArray(h.TestCaseExecutedByXaxis.length),this.setState({colorCodeOfTestCaseExecutedBy:h.ColorCodeOfTestCaseExecutedBy}),this.setState({testCaseCustomFieldGraphData:h.TestCaseCustomFieldGraphData}),this.setState({defectCustomFieldGraphData:h.DefectCustomFieldGraphData}),this.setState({isPageLoading:!1}))}}async ExportReportsInPdf(){}render(){return(0,X.jsxs)(s.Z,{className:"dashboard",title:"Dashboard",children:[this.state.isPageLoading&&(0,X.jsx)(g.Z,{sentences:j.b,height:"150%",color:"black"}),(0,X.jsxs)(i.Z,{in:!this.state.isPageLoading,children:[(0,X.jsx)(P(),{ref:this.notificationSystem}),(0,X.jsx)(r.Z,{children:(0,X.jsx)(l.Z,{lg:12,md:12,sm:12,xs:12,children:(0,X.jsx)(n.Z,{children:(0,X.jsx)(c.Z,{children:(0,X.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:["Select Test Cycle",(0,X.jsx)("div",{className:"d-flex justify-content-between align-items-center",children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(d.Z,{type:"select",name:"placeHolder",value:this.state.selectedTestCycle,onChange:this.selectTestCycle.bind(this),children:(0,X.jsx)(b.Z,{options:this.state.listOfTestCycle})})})})]})})})})}),(0,X.jsxs)(r.Z,{children:[(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsx)(x.yE,{title:"Total test cases",number:this.state.totalTestCase,color:"black"})}),(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsx)(x.yE,{title:"Total defects",number:this.state.totalDefects,color:"black"})}),(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsx)(x.yE,{title:"Total test plan",number:this.state.totalTestPlan,color:"black"})}),(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsx)(x.LR,{title:"Last Execution Results",number:this.state.totalTestCaseOnLastExecution,color:"success",progress:{value:this.state.passPercentageInLastExecution,label:"Pass"}})})]}),(0,X.jsxs)(r.Z,{children:[(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Test Case Automation Type"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.LD,{color:this.state.colorCodeForAutomatedGraph,labels:["Automated","Not Automated","Not a right candidate"],data:this.state.automatedandNotAutomatedData})})})]})}),(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Test case count based on Priority"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.LD,{color:this.state.colorCodeForTestPriority,labels:this.state.testPriorityDataXaxis,data:this.state.testPriorityDataYaxis})})})]})}),(0,X.jsx)(l.Z,{lg:6,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Component",(0,X.jsx)("small",{children:" Test Case count"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.componentTestCaseCountXaxisData,data:this.state.componentTestCaseCountYaxisData,color:this.state.colorCodeForComponentTestCaseCount})})})]})})]}),(0,X.jsx)(r.Z,{children:this.state.testCaseCustomFieldGraphData.map(((t,e)=>(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Test count based on '",t.header,"' field"]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:t.labels,data:[t.yAxis]})})})]})},e)))}),(0,X.jsxs)(r.Z,{children:[(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Defect Count based on Priority"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.defectPriorityDataXaxis,data:[this.state.defectPriorityDataYaxis]})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Defect Count based on Severity"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.defectSeverityDataXaxis,data:[this.state.defectSeverityDataYaxis]})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Defect Count based on Status"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.defectStatusDataXaxis,data:[this.state.defectStatusDataYaxis]})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Component",(0,X.jsx)("small",{children:" Defect count"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.defectComponentDataXaxis,data:this.state.defectComponentDataYAxis})})})]})}),this.state.defectCustomFieldGraphData.map(((t,e)=>(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Defect count based on '",t.header,"' field"]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:t.labels,data:[t.yAxis]})})})]})},e)))]}),(0,X.jsxs)(r.Z,{children:[(0,X.jsx)(l.Z,{lg:3,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsx)(c.Z,{children:"Execution Summary"}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.LD,{color:["#17E798","#F38295","#ffcc00","#A9A9A9","#5DADE2"],labels:this.state.testPlanTotalDataXaxis,data:this.state.testPlanTotalDataYaxis})})})]})}),(0,X.jsx)(l.Z,{lg:5,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Component",(0,X.jsx)("small",{children:" Summary"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.iT,{labels:this.state.testPlanExecutedComponentXaxis,label:["Pass","Fail","Pending","NA","Blocked"],data:this.state.testPlanExecutedComponentYaxis,color:["#17E798","#F38295","#ffcc00","#A9A9A9","#5DADE2"]})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Test Plan",(0,X.jsx)("small",{children:" Summary"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.iT,{labels:this.state.testPlanTestSuiteXaxis,label:["Pass","Fail","Pending","NA","Blocked"],data:this.state.testPlanTestSuiteYaxis,color:["#17E798","#F38295","#ffcc00","#A9A9A9","#5DADE2"]})})})]})})]}),(0,X.jsxs)(r.Z,{children:[(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Test Case",(0,X.jsx)("small",{children:" Created By"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.testCaseCreatedByXaxis,data:this.state.testCaseCreatedByYaxis})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Test Case",(0,X.jsx)("small",{children:" Executed By"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.testCaseExecutedByXaxis,data:this.state.testCaseExecutedByYaxis})})})]})}),(0,X.jsx)(l.Z,{lg:4,md:6,sm:6,xs:12,children:(0,X.jsxs)(n.Z,{children:[(0,X.jsxs)(c.Z,{children:["Defect",(0,X.jsx)("small",{children:" Created By"})]}),(0,X.jsx)(C.Z,{children:(0,X.jsx)(l.Z,{children:(0,X.jsx)(S.vz,{labels:this.state.defectCreatedByXaxis,data:this.state.defectCreatedByYaxis})})})]})})]})]})]})}}const Y=v},66075:(t,e,a)=>{a.d(e,{Z:()=>d});a(47313),a(66982);var s=a(99174),o=a(63476),i=a(61583),r=a(35277),l=a(46417);const n=s.ZP.create("page"),c=t=>{let{title:e,breadcrumbs:a,tag:s,className:c,children:d,...C}=t;const x=n.b("px-3",c);return(0,l.jsxs)(s,{className:x,...C,children:[(0,l.jsxs)("div",{className:n.e("header"),children:[e&&"string"===typeof e?(0,l.jsx)(r.Z,{type:"h1",className:n.e("title"),children:e}):e,a&&(0,l.jsxs)(o.Z,{className:n.e("breadcrumb"),children:[(0,l.jsx)(i.Z,{children:"Home"}),a.length&&a.map(((t,e)=>{let{name:a,active:s}=t;return(0,l.jsx)(i.Z,{active:s,children:a},e)}))]})]}),d]})};c.defaultProps={tag:"div",title:""};const d=c},35277:(t,e,a)=>{a.d(e,{Z:()=>n});var s=a(46123),o=a.n(s),i=(a(47313),a(66982),a(46417));const r={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6","display-1":"h1","display-2":"h1","display-3":"h1","display-4":"h1",p:"p",lead:"p",blockquote:"blockquote"},l=t=>{let{tag:e,className:a,type:s,...l}=t;const n=o()({[s]:!!s},a);let c;return c=e||(!e&&r[s]?r[s]:"p"),(0,i.jsx)(c,{...l,className:n})};l.defaultProps={type:"p"};const n=l},72102:(t,e,a)=>{a.d(e,{vz:()=>x,iT:()=>f,LD:()=>c,wW:()=>u});a(47313),a(66982);var s=a(88501),o=a(22123),i=a(75743),r=a(92234),l=a(46417);s.kL.register(s.qi,s.u,s.De),s.kL.register(o.Z);const n=t=>{let{...e}=t;var a={...e}.labels,s={...e}.data,o={...e}.color,n=[];if(void 0===o||0===o.length){const t=s.map((()=>Promise.resolve(r.Z.gerHexaColorCode())));Promise.all(t).then((t=>{n.push(...t)})).catch((t=>{console.error(t)}))}else n=o;var c={labels:a,datasets:[{data:s,backgroundColor:n,borderColor:n,borderWidth:2,cutout:"80%",borderRadius:10}]};return(0,l.jsx)(i.$I,{data:c,options:{responsive:!0,plugins:{legend:{position:"bottom",display:!0},datalabels:{color:"white",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}}}}})};n.defaultProps={labels:[],data:[],color:[]};const c=n;var d=a(3551);d.ZP.register(o.Z);const C=t=>{let{...e}=t;var a=!1,s={...e}.labels,o={...e}.data,n={...e}.color,c={...e}.label,d=[];for(let i=0;i<o.length;i++){var C={label:""};C.data=o[i],C.borderWidth=2,d.push(C)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===n||0===n.length)for(let i=0;i<d.length;i++){Promise.resolve(r.Z.gerHexaColorCode()).then((t=>{d[i].backgroundColor=t}))}else for(let i=0;i<d.length;i++)d[i].backgroundColor=n[i];var x={labels:s,datasets:d},h={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{ticks:{callback:function(t,e,a){var o=s[e];if(void 0!==o)return o.length>10?o.substring(0,10)+"...":o}}}}};return(0,l.jsx)(i.$Q,{options:h,data:x})};C.defaultProps={labels:[],data:[],color:[],label:[]};const x=C,h=t=>{let{...e}=t;var a=!1,s={...e}.labels,o={...e}.data,n={...e}.color,c={...e}.label,d=[];for(let i=0;i<o.length;i++){var C={label:""};C.data=o[i],C.borderWidth=3,C.tension=.1,d.push(C)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===n||0===n.length)for(let i=0;i<d.length;i++){Promise.resolve(r.Z.gerHexaColorCode()).then((t=>{d[i].borderColor=t}))}else for(let i=0;i<d.length;i++)d[i].borderColor=n[i];var x={labels:s,datasets:d},h={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{ticks:{callback:function(t,e,a){var o=s[e];if(void 0!==o)return o.length>11?o.substring(0,11)+"...":o}}}}};return(0,l.jsx)(i.x1,{data:x,options:h})};h.defaultProps={labels:[],data:[],color:[],label:[]};const u=h;d.ZP.register(o.Z);const D=t=>{let{...e}=t;var a=!1,s={...e}.labels,o={...e}.data,n={...e}.color,c={...e}.label,d=[];for(let i=0;i<o.length;i++){var C={label:""};C.data=o[i],C.borderColor="#000000",C.borderWidth=2,d.push(C)}if(c.length>0){a=!0;for(let t=0;t<d.length;t++)d[t].label=c[t]}if(void 0===n||0===n.length)for(let i=0;i<d.length;i++){Promise.resolve(r.Z.gerHexaColorCode()).then((t=>{d[i].backgroundColor=t}))}else for(let i=0;i<d.length;i++)d[i].backgroundColor=n[i];var x={labels:s,datasets:d},h={responsive:!0,plugins:{legend:{position:"bottom",display:a}},datalabels:{color:"black",labels:{title:{font:{weight:"bold"}}},formatter:function(t,e){return t}},scales:{x:{stacked:!0,ticks:{callback:function(t){var e=s[t];if(void 0!==e)return e.length>10?e.substring(0,10)+"...":e}}},y:{stacked:!0}}};return(0,l.jsx)(i.$Q,{options:h,data:x})};D.defaultProps={labels:[],data:[],color:[],label:[]};const f=D},12944:(t,e,a)=>{a.d(e,{LR:()=>d,yE:()=>y});a(47313),a(66982);var s=a(70238),o=a(52770),i=a(63953),r=a(35977),l=a(35277),n=a(46417);const c=t=>{let{title:e,subtitle:a,number:c,color:d,progress:{value:C,label:x},...h}=t;return(0,n.jsxs)(s.Z,{body:!0,...h,children:[(0,n.jsxs)("div",{className:"d-flex justify-content-between",children:[(0,n.jsxs)(o.Z,{tag:"div",children:[(0,n.jsx)(l.Z,{className:"mb-0",children:(0,n.jsx)("strong",{children:e})}),(0,n.jsx)(l.Z,{className:"mb-0 text-muted small",children:a})]}),(0,n.jsx)(i.Z,{className:"text-black",children:c})]}),(0,n.jsx)(r.Z,{value:Number(C),color:d,style:{height:"8px"}}),(0,n.jsxs)(o.Z,{tag:"div",className:"d-flex justify-content-between",children:[(0,n.jsx)(l.Z,{tag:"span",className:"text-left text-muted small",children:x}),(0,n.jsxs)(l.Z,{tag:"span",className:"text-right text-muted small",children:[Number(C),"%"]})]})]})};c.defaultProps={title:"",subtitle:"",number:0,color:"primary",progress:{value:0,label:""}};const d=c;var C=a(46123),x=a.n(C),h=a(33516),u=a(56581);const D=t=>{let{bgColor:e,icon:a,iconProps:o,title:r,subtitle:l,className:c,...d}=t;const C=x()("cr-widget",c,{["bg-".concat(e)]:e});return(0,n.jsxs)(s.Z,{inverse:!0,className:C,...d,children:[(0,n.jsx)(h.Z,{className:"cr-widget__icon",children:(0,n.jsx)(a,{size:50,...o})}),(0,n.jsxs)(h.Z,{children:[(0,n.jsx)(i.Z,{children:r}),(0,n.jsx)(u.Z,{children:l})]})]})};D.defaultProps={bgColor:"primary",icon:"span",iconProps:{size:50}};const f=t=>{let{title:e,number:a,color:r,...c}=t;return(0,n.jsx)(s.Z,{body:!0,...c,children:(0,n.jsxs)("div",{className:"d-flex justify-content-between",children:[(0,n.jsx)(o.Z,{tag:"div",children:(0,n.jsx)(l.Z,{className:"mb-0",children:(0,n.jsx)("strong",{children:e})})}),(0,n.jsx)(i.Z,{className:"text-".concat(r),children:a})]})})};f.defaultProps={title:"",number:0,color:"black"};const y=f},63476:(t,e,a)=>{a.d(e,{Z:()=>u});var s=a(47313),o=a(75192),i=a.n(o),r=a(46123),l=a.n(r),n=a(30986),c=["className","listClassName","cssModule","children","tag","listTag","aria-label"];function d(){return d=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(t[s]=a[s])}return t},d.apply(this,arguments)}function C(t,e){if(null==t)return{};var a,s,o=function(t,e){if(null==t)return{};var a,s,o={},i=Object.keys(t);for(s=0;s<i.length;s++)a=i[s],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(s=0;s<i.length;s++)a=i[s],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}var x={"aria-label":i().string,children:i().node,className:i().string,cssModule:i().object,listClassName:i().string,listTag:n.iC,tag:n.iC};function h(t){var e=t.className,a=t.listClassName,o=t.cssModule,i=t.children,r=t.tag,x=void 0===r?"nav":r,h=t.listTag,u=void 0===h?"ol":h,D=t["aria-label"],f=void 0===D?"breadcrumb":D,y=C(t,c),m=(0,n.mx)(l()(e),o),T=(0,n.mx)(l()("breadcrumb",a),o);return s.createElement(x,d({},y,{className:m,"aria-label":f}),s.createElement(u,{className:T},i))}h.propTypes=x;const u=h},61583:(t,e,a)=>{a.d(e,{Z:()=>u});var s=a(47313),o=a(75192),i=a.n(o),r=a(46123),l=a.n(r),n=a(30986),c=["className","cssModule","active","tag"];function d(){return d=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(t[s]=a[s])}return t},d.apply(this,arguments)}function C(t,e){if(null==t)return{};var a,s,o=function(t,e){if(null==t)return{};var a,s,o={},i=Object.keys(t);for(s=0;s<i.length;s++)a=i[s],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(s=0;s<i.length;s++)a=i[s],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}var x={active:i().bool,className:i().string,cssModule:i().object,tag:n.iC};function h(t){var e=t.className,a=t.cssModule,o=t.active,i=t.tag,r=void 0===i?"li":i,x=C(t,c),h=(0,n.mx)(l()(e,!!o&&"active","breadcrumb-item"),a);return s.createElement(r,d({},x,{className:h,"aria-current":o?"page":void 0}))}h.propTypes=x;const u=h},61123:()=>{},18137:()=>{}}]);