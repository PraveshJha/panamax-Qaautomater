"use strict";(self.webpackChunkqaautomater=self.webpackChunkqaautomater||[]).push([[385],{5374:(a,e,t)=>{t.d(e,{p:()=>i});var i={EnvironmentList:[],SelectedEnvironment:"",ComponentList:[],SelectedComponent:"",ThreadCount:1,TestingType:"Integration Testing",ReportingInDashboard:"No",ListOfTestScripts:[],SelectedTestScripts:[],TotalPassFailInLastXResults:[],BarChartDataForComponent:[],ThreadList:[1,2,3,4,5,6,7,8,9,10],AssertionResultsForAllResults:{},ResponseDataForAllResults:{},AllConfigData:{},ExecutionTimeGraphXaxis:[],ExecutionTimeGraphYaxis:[[]],ExecutionTimeColor:["#F39C12"],IsGlobalError:!1,GlobalErrorMessage:""}},6518:(a,e,t)=>{t.d(e,{Z:()=>p});var i=t(5374),n=t(123),s=t(8390),r=t(2234),l=t(1121),o=t(5831),d=t(2638),w=t(9696);const p=new class{async apiExecutionLabPageLoadData(){try{var a=null;s.D.isDemo||(a=await l.Z.readConfigurationFile(),o.M.AllConfigData=await a),await this.renderEnvironment(await a),await this.renderAllComponent(),await this.renderThreadCount()}catch(e){}}async renderEnvironment(a){await l.Z.updateEnvironmentTableData(a),i.p.EnvironmentList=o.M.EnvironmentList,i.p.SelectedEnvironment=o.M.DefaultSelectedEnvironment}async renderAllComponent(){if(s.D.isDemo)i.p.ComponentList=["All","LandingPage","SignIn","ProductList","ShoppingCart","BookingSummary"],i.p.SelectedComponent="All";else{var a=await localStorage.getItem("UserSelectedAccount"),e=await s.D.backendAPI;"remote"===s.D.backendServiceAt&&(e=await s.D.remoteBackendAPI);var t={Authorization:await s.Q.userToken,userEmail:await s.Q.userEmail},n=await w.Z.get(e+"components/project/"+a+"/testingtype/Api",await t),r=await n.data;r.length>0&&(i.p.ComponentList=["All"].concat(r),i.p.SelectedComponent="All")}}async renderThreadCount(){i.p.ThreadList.length>0&&(i.p.ThreadCount=i.p.ThreadList[0])}async getAllTestScriptsfromComponent(a){i.p.ListOfTestScripts="All"===a?await this.createTestSuiteForAllComponent(i.p.ComponentList):await this.createTestSuiteForSpecificComponent(a)}async executeAPITestScripts(a,e,t,n,l){var o=i.p.ListOfTestScripts,p=0,u=0,c=[],m={},v={},h=[],y={},g="Pass";if(s.D.isDemo){var A={};for(let a=0;a<await l.length;a++){var D=new Date,S=await l[a],b=await r.Z.getNumberFromRange(0,1);g="Pass";var K=[{id:1,expression:"ResponseCode",function:"ShouldBe",expected:200,actual:200}];A.ResponseCode=200,A.ResponseHeader={headkerKey:"Hope you are enjoing QAautoMater"},A.ResponseBody={message:"I m just hradcoded data , on real data you will get whatever you sent and whatever you get from the server"},1===b&&(g="Fail",K=[{id:1,expression:"ResponseCode",function:"ShouldBe",expected:201,actual:200}]),o[S-1].status=g,i.p.AssertionResultsForAllResults[S]=await K,i.p.ResponseDataForAllResults[S]=await A;var T=((new Date).getTime()-D.getTime())/1e3;A["Execution Time"]=await T+" Seconds"}}else{var f=await localStorage.getItem("UserSelectedAccount"),R={};R.environment=await a,R.threadCount=await e,R.testingType=await t,R.reportInDashBoard=await n;var I=[];for(let a=0;a<await l.length;a++){var C=await o[Number(await l[await a])-1];I.push(await C)}R.testscriptforExecution=await I;var x=await s.D.backendAPI;"remote"===s.D.backendServiceAt&&(x=await s.D.remoteBackendAPI);var L={Authorization:await s.Q.userToken,userEmail:await s.Q.userEmail},E=await w.Z.post(x+"apiexecutor/project/"+f,await L,await R);if(y=await E.data,i.p.GlobalErrorMessage=await y.globalError,""!==await y.globalError)return void(i.p.IsGlobalError=!0);i.p.IsGlobalError=!1,i.p.GlobalErrorMessage="";for(let a=0;a<await l.length;a++)o[Number(await l[await a])-1].status=await y.listOfTestScipts[a].status,i.p.AssertionResultsForAllResults[await l[a]]=await y.testscriptAssertionData[a+1],i.p.ResponseDataForAllResults[await l[a]]=await y.testscriptResponseData[a+1]}i.p.ListOfTestScripts=o;for(let i=0;i<o.length;i++){var Z=await o[i].component;"Pass"===(g=await o[i].status)?(p+=1,void 0===m[Z]?m[Z]=1:m[Z]=m[Z]+1):"Fail"===g&&(u+=1,void 0===v[Z]?v[Z]=1:v[Z]=v[Z]+1)}await new Promise((a=>setTimeout(a,2e3))),c.push(p),c.push(u),i.p.TotalPassFailInLastXResults=c,h.push(m),h.push(v),i.p.BarChartDataForComponent=h;var F=await y.executionTimeForComponent,k=await d.Z.getAllKeyValueInJsonArrayFromJsonObject(await F);i.p.ExecutionTimeGraphXaxis=await await k.key;var V=[];V.push(await k.value),i.p.ExecutionTimeGraphYaxis=await V}async createTestSuiteForSpecificComponent(a){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;var t=[],i={};if(s.D.isDemo){var n=await r.Z.getNumberFromRange(10,20);for(let s=0;s<n;s++)(i={id:0,component:await a,testid:0,testname:"",status:""}).id=e,i.testid="QA-"+await r.Z.getNumberFromRange(100,500),i.testname=" This is test case No "+(s+1),i.status="",t.push(i),e+=1}else{var l=await localStorage.getItem("UserSelectedAccount"),o=await d.Z.getListOfTestIdAndTestName(l,"Api",a);for(let n=0;n<o.length;n++)i={id:e,component:await a,testid:await o[n].testid,testname:await o[n].testname,status:""},t.push(i),e+=1}return t}async createTestSuiteForAllComponent(a){var e=[],t=1;for(let n=1;n<await a.length;n++){var i=await this.createTestSuiteForSpecificComponent(await a[n],t);t=i.length+t,e=e.concat(i)}return e}async updateAssertionTable(a,e){for(let o=0;o<await e.length;o++){var t=await e[o].expression,i=await e[o].function,s=await d.Z.createNameSpaceFromExpression(await t),r=await d.Z.getValueFromJsonUsingNameSpace(await a,s);void 0===r&&(r="Key not found!"),i.toString().toLowerCase().includes("length")&&(r=await r.length),e[o].actual="object"===typeof r?await JSON.stringify(await r):await r;var l=await e[o].expected;e[o].expected=await n.Z.getSessionVariableValue(await l)}return e}async updateAssertionTableForAllDataset(a,e){var t=await a.length+1;for(let n=0;n<await e.length;n++){var i={id:await t,expression:await e[n].expression,function:await e[n].function,expected:await e[n].expected,actual:await e[n].actual};a.push(await i),t+=1}return a}}},4908:(a,e,t)=>{t.d(e,{Z:()=>v});var i=t(266),n=t(8390),s=t(123),r=t(2638),l=t(4805),o=t(6017),d=t(1121),w=t(5831),p=t(2234),u=t(6518),c=t(7864),m=t(9696);const v=new class{async apiTestScriptPageLoadData(){try{var a=null;n.D.isDemo||(a=await d.Z.readConfigurationFile(),w.M.AllConfigData=await a),await this.renderComponent(),await this.renderEnvironment(a),await this.renderAutherization(a),await d.Z.updateHttpHeaderTableData(a),i.K.AllHttpHeaderData=w.M.HttpHeaderData}catch(e){}}async renderComponent(){if(n.D.isDemo)i.K.AllComponentList=["LandingPage","SignIn","ProductList","ShoppingCart","BookingSummary"];else{var a=await localStorage.getItem("UserSelectedAccount"),e=await n.D.backendAPI;"remote"===n.D.backendServiceAt&&(e=await n.D.remoteBackendAPI);var t={Authorization:await n.Q.userToken,userEmail:await n.Q.userEmail},s=await m.Z.get(e+"components/project/"+a+"/testingtype/Api",await t);i.K.AllComponentList=await s.data}if(i.K.AllComponentList.length>0){var r=[];for(let a=0;a<i.K.AllComponentList.length;a++){var l={label:i.K.AllComponentList[a],value:i.K.AllComponentList[a]};r.push(l)}i.K.DependendtComponentList=r}}async getTestScriptListFromComponent(a){i.K.AllTestId=await s.Z.getTestScriptIDfromallComponent(a)}async getAllAPITestAttribute(){await s.Z.getAllApiTestScriptAttribute()}async renderEnvironment(a){if(await d.Z.updateEnvironmentTableData(a),i.K.AllEnvironmentList=w.M.EnvironmentList,i.K.AllEnvironmentList.length>0)if(n.D.isDemo)i.K.SelectedEnvironmentName=w.M.DefaultSelectedEnvironment,i.K.AllComponentUrlLIst=await p.Z.getStringArray(3),i.K.SelectedComponentUrl=i.K.AllComponentUrlLIst[0],i.K.ApiUrl="https://fakerestapi.azurewebsites.net/api/v1/Activities";else{i.K.SelectedEnvironmentName=w.M.DefaultSelectedEnvironment;var e=await a.Url[i.K.SelectedEnvironmentName];void 0!==e&&e.length>0&&(i.K.AllComponentUrlLIst=await r.Z.jsonArrayGetallKeyValue(e,"name"),i.K.AllComponentUrlLIst.length>0&&(i.K.SelectedComponentUrl=i.K.AllComponentUrlLIst[0],i.K.ApiUrl=await e[0].url))}}async selectEnvironment(a){var e=await s.Z.getListOfUrlFromEnvronment(await a),t=await r.Z.jsonArrayGetallKeyValue(e,"name");i.K.AllComponentUrlLIst=t,i.K.SelectedComponentUrl=i.K.AllComponentUrlLIst[0],i.K.ApiUrl=e[0].url}async setApiUrlAfterSelectingComponent(a,e){var t=await s.Z.getListOfUrlFromEnvronment(await a),n=await r.Z.getIndexForMatchingKeyValueinJsonArray(await t,"name",await e);n>-1&&(i.K.ApiUrl=t[n].url)}async renderAutherization(a){if(n.D.isDemo)i.K.AllAutherizationList=await p.Z.getStringArray(3);else{var e=await a.Authorization;void 0!==await e&&await e.length>0&&(i.K.AllAutherizationList=await r.Z.jsonArrayGetallKeyValue(e,"key"))}}async getApiRequestAndResponseData(a,e){var t=await s.Z.getRequestAndResponseFromApi(await a,await e);i.K.ApiResponseData=t.ApiResponseData,i.K.ApiVariableData=t.ApiVariableData}async callRestApiMethod(a,e,t,l,d,w,p,m,v){var h={};try{var y=[];""!==await e.toString().trim()&&(a=await a+await e),""===await t.toString().trim()&&(t="Debug-TestId"),h=await r.Z.jsonObjectGetallKeyPairvalue(await l,"key","value"),h=await s.Z.convertRandomDataandSessionVariable(await h,await t);var g=1;"Post"!==await d&&"Put"!==await d&&"Patch"!==await d||n.D.isDemo||(g=await Object.keys(await w).length);var A={},D=[],S=await s.Z.getListOfUrlFromEnvronment(i.K.SelectedEnvironmentName);for(let e=1;e<=await g;e++){var b=await s.Z.callDependentApiandSaveInSessionVariable(i.K.TestingType,await t,await p,await S),K=await w[e.toString()];K=await s.Z.convertRandomDataandSessionVariable(await K,await t,await c.v);var T=await s.Z.convertRandomDataandSessionVariable(await a,await t,await c.v);h=await r.Z.jsonObjectGetallKeyPairvalue(await l,"key","value"),h=await s.Z.convertRandomDataandSessionVariable(await h,await t,await c.v),await s.Z.saveRequestVariableKeyInSessionVariable(await t,await v,await h,await K);var f=await s.Z.callRestApi(await T,await d,await h,await K),R=await Object.keys(await b).length;A["Test Results for Dataset "+e]=await f,await R>0&&(A["Dependendt Api Response Result"]=await b),m=await s.Z.convertRandomDataandSessionVariable(await m,await t,await c.v),m=await o.Z.addNewKeyInExistingJsonArray(await m,"actual"),m=await u.Z.updateAssertionTable(f,m),D=await u.Z.updateAssertionTableForAllDataset(await D,await m)}if(1===g&&0===R?i.K.ApiResponseData=await f:1===g&&R>0?(f["Dependendt Api Response Result"]=await b,i.K.ApiResponseData=await f):i.K.ApiResponseData=await A,i.K.ResponseAssertionData=await D,void 0!==await c.v[await t]){var I=await Object.keys(await c.v[await t]);for(let a=0;a<await I.length;a++){var C=await I[a],x=await c.v[await t][C],L=typeof await x,E={};E="object"===await L?{id:a+1,key:await C,value:await JSON.stringify(await x)}:{id:a+1,key:await C,value:await x},y.push(await E)}}i.K.ApiVariableData=await y}catch(F){var Z=F.toString();m=await o.Z.addNewKeyInExistingJsonArray(m,"actual","Not Evaluated"),i.K.ResponseAssertionData=await m,i.K.ApiResponseData={errorMessage:Z},i.K.ApiVariableData=await y}}async addDependentApiTableHeader(){0===i.K.DependentApiDataTable.length&&i.K.DependentApiDataTable.push({id:1,component:"",testid:"",variable:"myKey",key:"ResponseBody[keyName]",seq:1})}async getDependentTestIdList(a){var e=[],t="",s="",l="";if(n.D.isDemo){t=await p.Z.getNumberArray(5);for(let a=0;a<await t.length;a++)l={label:s=await t[a]+"@ this my test case "+(a+1),value:s},e.push(l);i.K.DependentTestIdList=await e}else{var o=await localStorage.getItem("UserSelectedAccount"),d=await r.Z.getListOfTestIdAndTestName(o,"Api",a);for(let a=0;a<await d.length;a++){l={label:s=(t=await d[a].testid)+"@"+await d[a].testname,value:s},e.push(l)}i.K.DependentTestIdList=await e}}async isDataFilledforDependendentAPITable(){var a=i.K.DependentApiDataTable;for(let r=0;r<a.length;r++){var e=await a[r].component.toString().trim(),t=await a[r].testid.toString().trim(),n=await a[r].variable.toString().trim(),s=await a[r].seq.toString().trim();if(""===e||""===t||""===n||""===s)return!1;if(await t.includes(await i.K.TestId+"@"))return!1}return!0}async deleteApiTestScript(a,e){if(i.K.AllComponentList.includes(await a)){if(i.K.AllTestId.includes(await e)){if(n.D.isDemo)return await new Promise((a=>setTimeout(a,2e3))),!0;var t=await localStorage.getItem("UserSelectedAccount"),s=await n.D.backendAPI;"remote"===n.D.backendServiceAt&&(s=await n.D.remoteBackendAPI);var r={Authorization:await n.Q.userToken,userEmail:await n.Q.userEmail},l=await m.Z.delete(s+"testscripts/component/"+a+"/testId/"+e+"@"+i.K.TestName+"/project/"+t+"/testingtype/Api",await r),o=await l.data;return n.D.ErrorMessage=await o.errorMessage,await o.isFileDeleted}return!1}return!1}async isAllDetailsValidInBasicDetailSection(){return!!(i.K.IsValidComponentName&&i.K.IsValidTestId&&i.K.IsValidTestName&&i.K.IsValidHttpMethod)}async isAllDetailsValidInUrlDetailSection(){return!(!i.K.IsValidEnvironment||!i.K.IsValidComponentUrl)}async isAllDetailsValidInDependendtApiTable(){return!!await this.isDataFilledforDependendentAPITable()}async isAllDetailsValidForRequestHeaderTable(){var a=i.K.AllHttpHeaderData,e=a.length;return!(e>0)||""!==await a[e-1].key.toString().trim()&&""!==await a[e-1].value.toString().trim()}async isAllDetailsValidForRequestVariableTable(){var a=i.K.AllRequestVariables,e=a.length;return!(e>0)||""!==await a[e-1].variable.toString().trim()&&""!==await a[e-1].key.toString().trim()}async isAllDetailsValidForRequestAssertionTable(){var a=i.K.AllAssertionData,e=a.length;return!(e>0)||""!==await a[e-1].expression.toString().trim()&&""!==await a[e-1].function.toString().trim()}async getMaxSequence(){var a=i.K.DependentApiDataTable,e=[];for(let i=0;i<await a.length;i++){var t=await a[i].testid;e.includes(t)||e.push(await t)}return e.length}async saveTestScript(){if(n.D.isDemo)return await new Promise((a=>setTimeout(a,2e3))),!0;var a=await localStorage.getItem("UserSelectedAccount"),e={};e.ComponentUrl=i.K.SelectedComponentUrl,e.RelativeUrl=i.K.RelativeUrl,e.HttpMethod=i.K.HttpMethod,e.AutherizationCredentialsKey=i.K.SelectedAutherization,e.RequestHeader=i.K.AllHttpHeaderData,e.RequestBody=i.K.AllRequestBody,e.RequestVariable=i.K.AllRequestVariables,e.Assertion=i.K.AllAssertionData,e.DependendtApiScripts=i.K.DependentApiDataTable;var t=n.D.backendAPI;"remote"===await n.D.backendServiceAt&&(t=n.D.remoteBackendAPI);var s={Authorization:await n.Q.userToken,userEmail:await n.Q.userEmail},r=await m.Z.post(t+"testscripts/component/"+i.K.ComponentName+"/testId/"+i.K.TestId+"@"+i.K.TestName+"/project/"+a+"/testingtype/Api",await s,await e),l=await r.data;return n.D.ErrorMessage=await l.errorMessage,await l.isFileSaved}async getDynamicDataValue(a,e){return await l.Z.getValueFromDynamicData(a,e)}async updateRequestBody(a,e,t){return await o.Z.setJsonKeyValue(a,e,t)}async setRequestBodyData(a){var e=a,t=await r.Z.getAllDynamicDataKeyList(a,"{{RandomData.");if(!(t.length>0))return e;var i=await JSON.stringify(e);for(let r=0;r<await t.length;r++){var n="",s="",l=await t[r];l.includes("||")?s=(n=await n.split("||")[1]).split("||")[1]:n=await l;var o=await this.getDynamicDataValue(n,s);return i=i.replaceAll("{{RandomData."+l+"}}",o),await JSON.parse(i)}}async getDependentApiScriptAttribute(a){var e={},t=[],i=await a.testid,r=await a.component,l=await a.variable,o=await i.split("@")[0],d=await i.split("@")[1];if(e.testid=await o,e.testname=await d,e.component=await r,t.push({id:1,variable:await l}),e.variabledata=await t,e.assertion=[],n.D.isDemo)e.relativeurl="",e.httpmethod="Get",e.requestheader=await w.M.HttpHeaderData,e.requestbody={},e.childapi=[];else{var p;p=await s.Z.getTestDetailsInJson(await r,await o,await d,"Api"),e.relativeurl=await p.RelativeUrl,e.httpmethod=await p.HttpMethod,e.requestheader=await p.RequestHeader,e.requestbody=await p.RequestBody,e.childapi=await p.DependendtApiScripts}return await e}async callDependendtApiMethod(a,e,t,n,l,o,d,w,p,u,m){var v={},h={},y=0;try{c.v[await n]={};var g=[];""!==await t.toString().trim()&&(e=await e+await t);var A=await e;v=await r.Z.jsonObjectGetallKeyPairvalue(await l,"key","value"),v=await s.Z.convertRandomDataandSessionVariable(await v,await n);var D=1;if("Unit Testing"===a)y=0,h=await s.Z.getMockedResponse(await e,await o,await l,await d,await u,await n,await m,"Api"),await s.Z.saveResponseVariableKeyInSessionVariable(await n,await p,await h);else{if("Post"===o||"Put"===o||"Patch"===o)try{D=await Object.keys(await d).length}catch(L){}var S={},b=await s.Z.getListOfUrlFromEnvronment(await i.K.SelectedEnvironmentName);for(let e=1;e<=D;e++){var K=await s.Z.callDependentApiandSaveInSessionVariable(await a,await n,await w,await b),T=await d[e.toString()];T=await s.Z.convertRandomDataandSessionVariable(await T,await n,await c.v),A=await s.Z.convertRandomDataandSessionVariable(await A,await n,await c.v),v=await r.Z.jsonObjectGetallKeyPairvalue(await l,"key","value"),v=await s.Z.convertRandomDataandSessionVariable(await v,await n,await c.v),h=await s.Z.callRestApi(await A,await o,await v,await T),await s.Z.saveResponseVariableKeyInSessionVariable(await n,await p,await h),y=await Object.keys(await K).length,S["Test Results for Dataset "+e]=await h,await y>0&&(S["Dependendt Api Response Result"]=await K)}}if(1===D&&0===y?i.K.ApiResponseData=await h:1===D&&y>0?(h["Dependendt Api Response Result"]=await K,i.K.ApiResponseData=await h):i.K.ApiResponseData=await S,void 0!==c.v[await n]){var f=Object.keys(c.v[await n]);for(let a=0;a<f.length;a++){var R=await f[a],I=await c.v[await n][R],C={};C="object"===typeof I?{id:a+1,key:R,value:await JSON.stringify(I)}:{id:a+1,key:R,value:I},g.push(C)}}i.K.ApiVariableData=await g}catch(L){var x=L.toString();i.K.ApiResponseData={errorMessage:x},i.K.ApiVariableData=await g}}async renameTestId(){if(n.D.isDemo)return!0;var a=await localStorage.getItem("UserSelectedAccount"),e=i.K.ComponentName.trim(),t=i.K.TestId.trim(),s=i.K.NewTestId.trim(),r=i.K.TestName.trim(),l=n.D.backendAPI;"remote"===await n.D.backendServiceAt&&(l=n.D.remoteBackendAPI);var o={Authorization:await n.Q.userToken,userEmail:await n.Q.userEmail},d=await m.Z.post(l+"testscripts/component/"+e+"/testId/"+t+"@"+r+"/project/"+a+"/testingtype/Api/updateid",await o,{newId:s}),w=await d.data;return n.D.ErrorMessage=await w.errorMessage,await w.isFileSaved}}},5385:(a,e,t)=>{t.d(e,{MH:()=>m,TA:()=>h,$e:()=>y,so:()=>v,OW:()=>c,wI:()=>g});var i=t(2638),n=t(2738),s=t(266),r=(t(4100),t(44),t(758)),l=t(4908),o=t(4118),d=t(580),w=t.n(d),p=t(6417);const u=async(a,e)=>{try{a=await a.updated_src,e.variable=JSON.stringify(await a)}catch(t){}};var c=[{dataField:"id",text:"#",headerStyle:{width:"30px"}},{dataField:"variable",text:"Variable",headerStyle:{width:"150px"},validator:async(a,e,t,r)=>{if(""===await a.trim())return r({valid:!1,message:"Variable name can not be empty"});if(/[^A-Za-z]/gi.test(await a))return r({valid:!1,message:"Variable name should not have special character and number."});var l=await i.Z.jsonArrayGetallKeyValue(s.K.AllRequestVariables,"variable");return await n.Z.isValuePresentInArray(l,await a)?r({valid:!1,message:"Variable name can not be duplicate."}):r()}},{dataField:"key",text:"Request Key",headerStyle:{width:"300px"},validator:async(a,e,t,i)=>{if(""===await a.trim())return i({valid:!1,message:"Request key can not be empty"});if(/[^A-Za-z0-9-[]]/gi.test(await a))return i({valid:!1,message:"Request Key should not have special character."});let n=await a.toLowerCase().startsWith("requestbody")||await a.toLowerCase().startsWith("requestheader");return await n?i():i({valid:!1,message:"Request Key should be started from [RequestBody,RequestHeader]"})}}],m=[{dataField:"id",text:"#",headerStyle:{width:"30px"}},{dataField:"expression",text:"Expression",headerStyle:{width:"200px"},validator:async(a,e,t,i)=>{if(""===await a.trim())return i({valid:!1,message:"Expression can not be empty"});if(/[^A-Za-z0-9-[]]/gi.test(await a))return i({valid:!1,message:"Expression should not have special character."});let n=await a.toLowerCase().startsWith("responsebody")||await a.toLowerCase().startsWith("responseheader")||await a.toLowerCase().startsWith("responsecode");return await n?i():i({valid:!1,message:"Expression should be started from [ResponseBody,ResponseHeader,ResponseCode]"})}},{dataField:"function",text:"Function",headerStyle:{width:"120px"},validator:async(a,e,t,i)=>""===await a.trim()?i({valid:!1,message:"Function can not be empty"}):i(),editor:{type:r.Dy.SELECT,options:[{value:"ShouldBe",label:"ShouldBe"},{value:"ShouldContains",label:"ShouldContains"},{value:"LengthShouldBe",label:"LengthShouldBe"},{value:"LengthGreaterThanEqualTo",label:"LengthGreaterThanEqualTo"},{value:"LengthLessThanEqualTo",label:"LengthLessThanEqualTo"},{value:"KeyShouldExist",label:"KeyShouldExist"},{value:"KeyShouldNotExist",label:"KeyShouldNotExist"},{value:"ShouldBeNull",label:"ShouldBeNull"},{value:"ShouldNotBeNull",label:"ShouldNotBeNull"},{value:"ValueBetween",label:"ValueBetween"},{value:"ShouldBeInTheList",label:"ShouldBeInTheList"},{value:"ShouldNotBeInTheList",label:"ShouldNotBeInTheList"}]}},{dataField:"expected",text:"Expected",headerStyle:{width:"120px"}}],v=[{dataField:"id",text:"#",headerStyle:{width:"30px"}},{dataField:"key",text:"Key",headerStyle:{width:"180px"},validator:async(a,e,t,r)=>{if(""===await a.trim())return r({valid:!1,message:"key name can not be empty"});var l=await i.Z.jsonArrayGetallKeyValue(s.K.AllHttpHeaderData,"key");return await n.Z.isValuePresentInArray(l,await a)?r({valid:!1,message:"key name can not be duplicate."}):r()}},{dataField:"value",text:"Value",headerStyle:{width:"300px"},validator:async(a,e,t,i)=>""===await a.trim()?i({valid:!1,message:"value can not be empty"}):i()}],h=[{dataField:"id",text:"#",headerStyle:{width:"40px"}},{dataField:"component",text:"Component",headerStyle:{width:"120px"},editor:{type:r.Dy.SELECT,getOptions:a=>{setTimeout((()=>{a(s.K.DependendtComponentList)}),0)}},validator:async(a,e,t,i)=>{if(""===await a)return s.K.DependentTestIdList=[],s.K.DependentApiDataTable[e.id-1].testid="",i({valid:!1,message:"Component name can not be blank"});var n=s.K.DependentApiDataTable[e.id-1].component;return await n!==await a&&(s.K.DependentApiDataTable[e.id-1].testid="",await l.Z.getDependentTestIdList(await a)),i()}},{dataField:"testid",text:"TestId",headerStyle:{width:"200px"},editor:{type:r.Dy.SELECT,getOptions:a=>{setTimeout((()=>{a(s.K.DependentTestIdList)}),50)}},validator:async(a,e,t,i)=>""!==s.K.TestId?await a.toLowerCase().includes(s.K.TestId.toLocaleLowerCase()+"@")?i({valid:!1,message:"New Test id and dependent test ID can not be same."}):i():i({valid:!1,message:"Please provide new test Id."})},{dataField:"variable",text:"Save Response in a variable",headerStyle:{width:"200px"},validator:async(a,e,t,i)=>i(),formatter:(a,e)=>(void 0!==e.variable&&""!==e.variable||(e.variable="{}"),(0,p.jsx)(w(),{name:!1,collapseStringsAfterLength:200,displayDataTypes:!1,indentWidth:0,enableClipboard:!0,iconStyle:"circle",collapsed:!0,src:JSON.parse(e.variable),onAdd:a=>u(a,e),onEdit:a=>u(a,e),onDelete:a=>u(a,e)})),editable:!1},{dataField:"seq",text:"Seq",headerStyle:{width:"50px"},validator:async(a,e,t,i)=>{if(/[^1-9]/gi.test(await a))return i({valid:!1,message:"Seq should be greater than 1"});if(""===a.trim())return i({valid:!1,message:"Only integer value allowed"});if(""===e.testid.toString().trim())return i({valid:!1,message:"Please select TestId first"});var n=await l.Z.getMaxSequence();return a>n?i({valid:!1,message:"As per your data selection Maximum sequence can be "+n}):i()}}],y=[{dataField:"id",text:"#",headerStyle:{width:"30px"}},{dataField:"key",text:"Key",headerStyle:{width:"100px"},validator:async(a,e,t,r)=>{if(""===await a.trim())return r({valid:!1,message:"key name can not be empty"});if(/[^A-Za-z]/gi.test(await a))return r({valid:!1,message:"key name should not have special character and number."});var l=await i.Z.jsonArrayGetallKeyValue(s.K.DependentResponseKeyData,"key");return await n.Z.isValuePresentInArray(l,await a)?r({valid:!1,message:"key name can not be duplicate."}):(s.K.DependentResponseKeyData.push(e),r())}},{dataField:"value",text:"Value",headerStyle:{width:"120px"},validator:async(a,e,t,i)=>{if(""===await a.trim())return i({valid:!1,message:"value can not be empty"});if(/[^A-Za-z0-9-[]]/gi.test(await a))return i({valid:!1,message:"value should not have special character."});let n=await a.toLowerCase().startsWith("responseheader")||await a.toLowerCase().startsWith("responsebody");return await n?i():i({valid:!1,message:"Accepted value should be started [ResponseBody,ResponseHeader]"})}}],g=[{dataField:"id",text:"#",headerStyle:{width:"40px"}},{dataField:"key",text:"Data Key",editable:!1,headerStyle:{width:"170px"},filter:(0,o.DN)({className:"test-classname",placeholder:"Search"})},{dataField:"custom",text:"Parameter",headerStyle:{width:"150px"}}]}}]);